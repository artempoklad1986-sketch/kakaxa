<?php
// –î–æ–±–∞–≤—å—Ç–µ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ <?php –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['ai_action'])) {
    // –í–∫–ª—é—á–∞–µ–º –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—é –∏ –æ—á–∏—â–∞–µ–º –≤—Å–µ
    ob_clean();
    ob_start();

    // –í—ã–≤–æ–¥–∏–º —á—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä
    echo "RAW RESPONSE START\n";
    var_dump($_POST);
    echo "RAW RESPONSE END\n";

    $response = ob_get_clean();
    file_put_contents('debug_ai_response.txt', $response);

    echo json_encode(['debug' => 'response saved to debug_ai_response.txt']);
    exit;
}
// ============================================================================
// üì¶ –°–û–ó–î–ê–¢–ï–õ–¨ –¢–û–í–ê–†–û–í v4.2 - –ò–°–ü–†–ê–í–õ–ï–ù–ê –û–®–ò–ë–ö–ê –°–û–ï–î–ò–ù–ï–ù–ò–Ø –° –ò–ò
// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å —á—Ç–µ–Ω–∏–µ–º —Ç–µ–ª–∞ –æ—Ç–≤–µ—Ç–∞ –∏ —É–ª—É—á—à–µ–Ω–∞ –æ—Ç–ª–∞–¥–∫–∞
// ============================================================================

// –í–∫–ª—é—á–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
error_reporting(E_ALL);
ini_set('display_errors', 1);

// –ü–æ–¥–∫–ª—é—á–∞–µ–º functions.php —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø—É—Ç–µ–º
require_once '../functions.php';

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ò–ò –º–æ–¥—É–ª—è —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π
$aiModulePath = $_SERVER['DOCUMENT_ROOT'] . '/admin/modules/ai_assistant/aqua_ai.php';
$aiFileExists = file_exists($aiModulePath);
$aquaAI = getAquaAI();
$aquaAIClass = class_exists('AquaAI');
$aquaAIObject = ($aquaAI !== null);
$handleAjaxMethod = ($aquaAI && method_exists($aquaAI, 'handleAjaxRequest'));

$aiModuleStatus = ($aquaAIClass && $aquaAIObject && $handleAjaxMethod) ? 'active' : 'stub';

// –õ–æ–≥–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
error_log("=== AI MODULE DIAGNOSTIC ===");
error_log("AI File Path: " . $aiModulePath);
error_log("AI File Exists: " . ($aiFileExists ? 'YES' : 'NO'));
error_log("AquaAI Class Exists: " . ($aquaAIClass ? 'YES' : 'NO'));
error_log("AquaAI Object Created: " . ($aquaAIObject ? 'YES' : 'NO'));
error_log("handleAjaxRequest Method: " . ($handleAjaxMethod ? 'YES' : 'NO'));
error_log("Final AI Status: " . $aiModuleStatus);

$categories = getCategories();

// –û–±—Ä–∞–±–æ—Ç–∫–∞ AJAX –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç –ò–ò
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['ai_action'])) {
    // –û—á–∏—â–∞–µ–º –±—É—Ñ–µ—Ä –≤—ã–≤–æ–¥–∞
    if (ob_get_level()) {
        ob_clean();
    }

    header('Content-Type: application/json; charset=utf-8');

    try {
        $action = $_POST['ai_action'];
        error_log("AI Action Requested: " . $action);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ò–ò –º–æ–¥—É–ª—è
        if ($aiModuleStatus !== 'active') {
            $result = [
                'success' => false, 
                'message' => '–ò–ò –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω',
                'debug' => [
                    'file_exists' => $aiFileExists,
                    'class_exists' => $aquaAIClass,
                    'object_created' => $aquaAIObject,
                    'method_exists' => $handleAjaxMethod,
                    'status' => $aiModuleStatus
                ]
            ];
            echo json_encode($result, JSON_UNESCAPED_UNICODE);
            exit;
        }

        switch ($action) {
            case 'generate_all':
                $name = trim($_POST['product_name'] ?? '');
                $category = $_POST['category'] ?? '';

                error_log("Generate All - Name: $name, Category: $category");

                if (empty($name)) {
                    $result = ['success' => false, 'message' => '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞'];
                    break;
                }

                // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –ò–ò
                try {
                    $aiResult = $aquaAI->handleAjaxRequest('generate_all', [
                        'product_name' => $name,
                        'category' => $category
                    ]);
                    $result = $aiResult;
                    error_log("AI Result: " . json_encode($result));
                } catch (Exception $e) {
                    error_log("AI Generate All Error: " . $e->getMessage());
                    $result = ['success' => false, 'message' => '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ' . $e->getMessage()];
                }
                break;

            case 'generate_name':
                $category = $_POST['category'] ?? '';
                $keywords = explode(' ', $_POST['keywords'] ?? '');

                try {
                    $generatedName = $aquaAI->generateProductName($category, $keywords);
                    $result = ['success' => true, 'name' => $generatedName];
                } catch (Exception $e) {
                    $result = ['success' => false, 'message' => '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è: ' . $e->getMessage()];
                }
                break;

            case 'generate_description':
                $name = $_POST['product_name'] ?? '';
                $category = $_POST['category'] ?? '';

                if (empty($name)) {
                    $result = ['success' => false, 'message' => '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞'];
                    break;
                }

                try {
                    $descriptions = $aquaAI->generateProductDescription($name, $category);
                    $result = [
                        'success' => true,
                        'description' => $descriptions['description'],
                        'short_description' => $descriptions['short_description']
                    ];
                } catch (Exception $e) {
                    $result = ['success' => false, 'message' => '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è: ' . $e->getMessage()];
                }
                break;

            case 'suggest_price':
                $name = $_POST['product_name'] ?? '';
                $category = $_POST['category'] ?? '';

                try {
                    $priceData = $aquaAI->suggestOptimalPrice($name, $category);
                    $result = [
                        'success' => true,
                        'price' => $priceData['price'],
                        'old_price' => $priceData['old_price'],
                        'explanation' => $priceData['explanation'],
                        'confidence' => $priceData['confidence']
                    ];
                } catch (Exception $e) {
                    $result = ['success' => false, 'message' => '–û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ —Ü–µ–Ω—ã: ' . $e->getMessage()];
                }
                break;

            case 'generate_tags':
                $name = $_POST['product_name'] ?? '';
                $description = $_POST['description'] ?? '';
                $category = $_POST['category'] ?? '';

                try {
                    $seoData = $aquaAI->generateSEOData($name, $description, $category);
                    $result = ['success' => true, 'tags' => $seoData['tags']];
                } catch (Exception $e) {
                    $result = ['success' => false, 'message' => '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–≥–æ–≤: ' . $e->getMessage()];
                }
                break;

            case 'optimize_seo':
                $name = $_POST['product_name'] ?? '';
                $description = $_POST['description'] ?? '';
                $category = $_POST['category'] ?? '';

                try {
                    $seoData = $aquaAI->generateSEOData($name, $description, $category);
                    $result = [
                        'success' => true,
                        'meta_title' => $seoData['meta_title'],
                        'meta_description' => $seoData['meta_description'],
                        'tags' => $seoData['tags'],
                        'seo_score' => $seoData['seo_score'],
                        'recommendations' => $seoData['recommendations']
                    ];
                } catch (Exception $e) {
                    $result = ['success' => false, 'message' => '–û—à–∏–±–∫–∞ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: ' . $e->getMessage()];
                }
                break;

            case 'analyze_product':
                $productData = [
                    'name' => $_POST['product_name'] ?? '',
                    'description' => $_POST['description'] ?? '',
                    'price' => (float)($_POST['price'] ?? 0),
                    'category_id' => $_POST['category'] ?? '',
                    'main_image' => $_POST['main_image'] ?? ''
                ];

                try {
                    $analysis = $aquaAI->analyzeProduct($productData);
                    $result = ['success' => true, 'analysis' => $analysis];
                } catch (Exception $e) {
                    $result = ['success' => false, 'message' => '–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: ' . $e->getMessage()];
                }
                break;

            case 'improve_product':
                $productData = [
                    'name' => $_POST['product_name'] ?? '',
                    'description' => $_POST['description'] ?? '',
                    'price' => (float)($_POST['price'] ?? 0),
                    'category_id' => $_POST['category'] ?? '',
                    'main_image' => $_POST['main_image'] ?? ''
                ];

                try {
                    $improvements = $aquaAI->improveProduct($productData);
                    $result = ['success' => true, 'improvements' => $improvements];
                } catch (Exception $e) {
                    $result = ['success' => false, 'message' => '–û—à–∏–±–∫–∞ —É–ª—É—á—à–µ–Ω–∏—è: ' . $e->getMessage()];
                }
                break;

            default:
                $result = ['success' => false, 'message' => '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –ò–ò: ' . $action];
        }

        // –û–±—É—á–∞–µ–º –ò–ò –Ω–∞ —É—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö
        if (isset($result['success']) && $result['success'] && method_exists($aquaAI, 'learnFromUserAction')) {
            try {
                $aquaAI->learnFromUserAction($action, $_POST, true);
            } catch (Exception $e) {
                error_log("AI Learning Error: " . $e->getMessage());
            }
        }

    } catch (Exception $e) {
        error_log('AI Creator Error: ' . $e->getMessage());
        $result = [
            'success' => false, 
            'message' => '–û—à–∏–±–∫–∞ –ò–ò: ' . $e->getMessage(),
            'debug' => [
                'action' => $action ?? 'unknown',
                'error' => $e->getMessage()
            ]
        ];
    }

    echo json_encode($result, JSON_UNESCAPED_UNICODE);
    exit;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
if ($_SERVER['REQUEST_METHOD'] === 'POST' && !isset($_POST['ai_action'])) {
    $productData = [
        'name' => trim($_POST['name'] ?? ''),
        'latin_name' => trim($_POST['latin_name'] ?? ''),
        'price' => (float)($_POST['price'] ?? 0),
        'old_price' => (float)($_POST['old_price'] ?? 0),
        'description' => trim($_POST['description'] ?? ''),
        'short_description' => trim($_POST['short_description'] ?? ''),
        'category_id' => (int)($_POST['category_id'] ?? 0),
        'difficulty' => trim($_POST['difficulty'] ?? '–ª–µ–≥–∫–æ'),
        'care_level' => trim($_POST['care_level'] ?? '–Ω–∞—á–∏–Ω–∞—é—â–∏–π'),
        'size' => trim($_POST['size'] ?? ''),
        'temperature' => trim($_POST['temperature'] ?? ''),
        'ph_level' => trim($_POST['ph_level'] ?? ''),
        'lighting' => trim($_POST['lighting'] ?? ''),
        'tags' => trim($_POST['tags'] ?? ''),
        'meta_title' => trim($_POST['meta_title'] ?? ''),
        'meta_description' => trim($_POST['meta_description'] ?? ''),
        'stock_quantity' => (int)($_POST['stock_quantity'] ?? 0),
        'sku' => trim($_POST['sku'] ?? generateRandomSKU()),
        'manufacturer' => trim($_POST['manufacturer'] ?? ''),
        'country' => trim($_POST['country'] ?? ''),
        'warranty_months' => (int)($_POST['warranty_months'] ?? 0),
        'main_image' => $_POST['main_image'] ?? '',
        'gallery' => $_POST['gallery'] ?? '[]',
        'badges' => $_POST['badges'] ?? '[]',
        'ai_generated' => isset($_POST['ai_generated']) ? 1 : 0
    ];

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    $errors = [];
    if (empty($productData['name'])) $errors[] = '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';
    if (empty($productData['description'])) $errors[] = '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';
    if ($productData['price'] <= 0) $errors[] = '–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è';
    if ($productData['category_id'] <= 0) $errors[] = '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é';

    if (empty($errors)) {
        $result = saveProduct($productData);
        if ($result['success']) {
            $success = '–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! ID: ' . $result['product_id'];

            // –û–±—É—á–∞–µ–º –ò–ò –Ω–∞ —É—Å–ø–µ—à–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞
            if ($aiModuleStatus === 'active' && method_exists($aquaAI, 'learnFromUserAction')) {
                try {
                    $aquaAI->learnFromUserAction('product_created', $productData, true);
                } catch (Exception $e) {
                    error_log("AI Learning Error on product creation: " . $e->getMessage());
                }
            }

            $_POST = []; // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
        } else {
            $error = '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞: ' . ($result['error'] ?? '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
        }
    } else {
        $error = '–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏: ' . implode(', ', $errors);
    }
}

function generateRandomSKU() {
    return 'PROD_' . strtoupper(substr(uniqid(), -8));
}

// –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ò–ò –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
$aiStats = ['total_generations' => 0, 'learning_entries' => 0, 'knowledge_base_size' => 0];
if ($aiModuleStatus === 'active' && method_exists($aquaAI, 'getAIStats')) {
    try {
        $aiStats = $aquaAI->getAIStats();
    } catch (Exception $e) {
        error_log('AI Stats Error: ' . $e->getMessage());
    }
}
?>

<!DOCTYPE html>
<html lang='ru'>
<head>
    <meta charset='UTF-8'>
    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
    <title>üì¶ –°–æ–∑–¥–∞—Ç–µ–ª—å –¢–æ–≤–∞—Ä–æ–≤ v4.2 | –ê–∫–≤–∞–°–±–æ—Ä</title>

    <!-- Bootstrap 5.3 -->
    <link href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css' rel='stylesheet'>
    <!-- Font Awesome -->
    <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css'>

    <style>
        :root {
            --primary-color: #667eea;
            --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --success-color: #06d6a0;
            --warning-color: #ffd60a;
            --danger-color: #f72585;
            --ai-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }

        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            min-height: 100vh;
        }

        .main-header {
            background: var(--primary-gradient);
            color: white;
            padding: 2rem 0;
            margin-bottom: 2rem;
            position: relative;
            overflow: hidden;
        }

        .main-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="20" cy="20" r="2" fill="rgba(255,255,255,0.1)"/><circle cx="80" cy="80" r="2" fill="rgba(255,255,255,0.1)"/><circle cx="40" cy="60" r="1" fill="rgba(255,255,255,0.1)"/></svg>');
        }

        .header-title {
            font-size: 2.5rem;
            font-weight: 700;
            text-shadow: 0 2px 10px rgba(0,0,0,0.3);
            position: relative;
            z-index: 1;
        }

        .ai-status {
            position: absolute;
            top: 1rem;
            right: 1rem;
            z-index: 2;
        }

        .card {
            border: none;
            border-radius: 20px;
            box-shadow: 0 10px 40px rgba(0,0,0,0.1);
            background: rgba(255,255,255,0.9);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .card:hover {
            transform: translateY(-8px);
            box-shadow: 0 20px 60px rgba(0,0,0,0.15);
        }

        .card-header {
            background: var(--primary-gradient);
            color: white;
            border: none;
            padding: 1.5rem;
            border-radius: 20px 20px 0 0 !important;
        }

        .form-control, .form-select {
            border-radius: 15px;
            border: 2px solid #e9ecef;
            padding: 12px 16px;
            transition: all 0.3s ease;
        }

        .form-control:focus, .form-select:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }

        .btn {
            border-radius: 15px;
            padding: 10px 20px;
            font-weight: 500;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            border: none;
        }

        .btn:hover:not(:disabled) {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.2);
        }

        .btn-primary {
            background: var(--primary-gradient);
        }

        .btn-success {
            background: linear-gradient(135deg, #06d6a0, #00b09b);
        }

        .ai-panel {
            background: var(--ai-gradient);
            color: white;
            border-radius: 20px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            position: relative;
            overflow: hidden;
        }

        .ai-panel::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path d="M10,10 Q20,20 30,10 T50,10 T70,10 T90,10" stroke="rgba(255,255,255,0.1)" fill="none"/></svg>');
        }

        .ai-panel .btn {
            background: rgba(255,255,255,0.2);
            color: white;
            border: 1px solid rgba(255,255,255,0.3);
            backdrop-filter: blur(10px);
        }

        .ai-panel .btn:hover:not(:disabled) {
            background: rgba(255,255,255,0.3);
            border-color: rgba(255,255,255,0.5);
        }

        .ai-panel .btn:disabled {
            background: rgba(255,255,255,0.1);
            color: rgba(255,255,255,0.5);
            border-color: rgba(255,255,255,0.2);
            transform: none;
            cursor: not-allowed;
        }

        .ai-status-badge {
            padding: 0.5rem 1rem;
            border-radius: 50px;
            font-size: 0.9rem;
            font-weight: 600;
        }

        .ai-active {
            background: linear-gradient(135deg, #06d6a0, #00b09b);
            color: white;
        }

        .ai-stub {
            background: linear-gradient(135deg, #ffd60a, #f72585);
            color: white;
        }

        .image-upload-area {
            border: 3px dashed #dee2e6;
            border-radius: 20px;
            padding: 3rem 2rem;
            text-align: center;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .image-upload-area:hover {
            border-color: var(--primary-color);
            background: #e3f2fd;
        }

        .gallery-preview {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            gap: 15px;
            margin-top: 1rem;
        }

        .gallery-item {
            position: relative;
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        .live-preview {
            background: white;
            border-radius: 20px;
            padding: 1.5rem;
            box-shadow: 0 10px 40px rgba(0,0,0,0.1);
            position: sticky;
            top: 2rem;
        }

        .ai-suggestion {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border: 2px solid var(--primary-color);
            border-radius: 15px;
            padding: 1rem;
            margin: 0.5rem 0;
        }

        .loading-spinner {
            display: none;
            width: 20px;
            height: 20px;
            border: 2px solid #f3f3f3;
            border-top: 2px solid var(--primary-color);
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .debug-info {
            background: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 10px;
            padding: 10px;
            margin-bottom: 20px;
            font-family: monospace;
            font-size: 12px;
        }

        @media (max-width: 768px) {
            .header-title { font-size: 2rem; }
            .card { margin-bottom: 1rem; }
        }
    </style>
</head>
<body>

<!-- –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ -->
<header class='main-header'>
    <div class='ai-status'>
        <span class='ai-status-badge <?= $aiModuleStatus === 'active' ? 'ai-active' : 'ai-stub' ?>'>
            <i class='fas fa-robot me-1'></i>
            –ò–ò: <?= $aiModuleStatus === 'active' ? '–ê–ö–¢–ò–í–ï–ù' : '–ó–ê–ì–õ–£–®–ö–ê' ?>
        </span>
    </div>
    <div class='container'>
        <h1 class='header-title'>
            <i class='fas fa-box-open me-3'></i>
            üì¶ –°–æ–∑–¥–∞—Ç–µ–ª—å –¢–æ–≤–∞—Ä–æ–≤ v4.2
        </h1>
        <p class='lead mb-0'>
            ‚ú® –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–µ —Ç–æ–≤–∞—Ä—ã —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –ò–ò –ø–æ–º–æ—â–Ω–∏–∫–∞
        </p>
        <?php if ($aiModuleStatus === 'active'): ?>
        <small class='d-block mt-2 opacity-75'>
            üìä –ò–ò —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: <?= $aiStats['total_generations'] ?> –≥–µ–Ω–µ—Ä–∞—Ü–∏–π, 
            <?= $aiStats['learning_entries'] ?> –∑–∞–ø–∏—Å–µ–π –æ–±—É—á–µ–Ω–∏—è, 
            –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π: <?= $aiStats['knowledge_base_size'] ?> —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        </small>
        <?php endif; ?>
    </div>
</header>

<div class='container-fluid'>

    <!-- –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
    <div class='debug-info'>
        <strong>üîß –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</strong><br>
        –ò–ò –º–æ–¥—É–ª—å —Å—Ç–∞—Ç—É—Å: <strong><?= $aiModuleStatus ?></strong><br>
        –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –ò–ò: <?= $aiModulePath ?><br>
        –§–∞–π–ª –ò–ò —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: <?= $aiFileExists ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç' ?><br>
        –ö–ª–∞—Å—Å AquaAI —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: <?= $aquaAIClass ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç' ?><br>
        –û–±—ä–µ–∫—Ç –ò–ò —Å–æ–∑–¥–∞–Ω: <?= $aquaAIObject ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç' ?><br>
        –ú–µ—Ç–æ–¥ handleAjaxRequest: <?= $handleAjaxMethod ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç' ?>
    </div>

    <!-- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è -->
    <?php if (isset($success)): ?>
        <div class='alert alert-success alert-dismissible fade show'>
            <div class='d-flex align-items-center'>
                <i class='fas fa-check-circle me-3 fs-4'></i>
                <div>
                    <strong>üéâ –£—Å–ø–µ—Ö!</strong><br>
                    <?= $success ?>
                </div>
            </div>
            <button type='button' class='btn-close' data-bs-dismiss='alert'></button>
        </div>
    <?php endif; ?>

    <?php if (isset($error)): ?>
        <div class='alert alert-danger alert-dismissible fade show'>
            <div class='d-flex align-items-center'>
                <i class='fas fa-exclamation-triangle me-3 fs-4'></i>
                <div>
                    <strong>‚ùå –û—à–∏–±–∫–∞!</strong><br>
                    <?= $error ?>
                </div>
            </div>
            <button type='button' class='btn-close' data-bs-dismiss='alert'></button>
        </div>
    <?php endif; ?>

    <div class='row'>
        <!-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ–æ—Ä–º–∞ -->
        <div class='col-xl-8 col-lg-7'>
            <form method='POST' id='productForm' enctype='multipart/form-data'>

                <!-- –ò–ò –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è -->
                <div class='ai-panel'>
                    <div class='d-flex justify-content-between align-items-center flex-wrap'>
                        <div>
                            <h5 class='mb-1'>
                                <i class='fas fa-robot me-2'></i>
                                ü§ñ –ò–ò –ü–æ–º–æ—â–Ω–∏–∫
                                <div class='loading-spinner d-inline-block ms-2' id='aiLoadingSpinner'></div>
                            </h5>
                            <small class='opacity-75'>
                                <?= $aiModuleStatus === 'active' ? 
                                '–ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ò–ò –ø–æ–º–æ—â–Ω–∏–∫ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ' : 
                                '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–∞–∑–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ –ò–ò –º–æ–¥—É–ª—è' ?>
                            </small>
                        </div>
                        <div class='btn-group flex-wrap gap-2'>
                            <button type='button' class='btn btn-light' onclick='aiGenerateAll()' 
                                    <?= $aiModuleStatus !== 'active' ? 'disabled title="–ò–ò –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"' : '' ?>>
                                <i class='fas fa-magic me-1'></i>–ü–æ–ª–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
                            </button>
                            <button type='button' class='btn btn-light' onclick='aiImproveProduct()'
                                    <?= $aiModuleStatus !== 'active' ? 'disabled' : '' ?>>
                                <i class='fas fa-wand-magic-sparkles me-1'></i>–£–ª—É—á—à–∏—Ç—å –≤—Å—ë
                            </button>
                            <button type='button' class='btn btn-light' onclick='aiAnalyzeProduct()'
                                    <?= $aiModuleStatus !== 'active' ? 'disabled' : '' ?>>
                                <i class='fas fa-search me-1'></i>–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å
                            </button>
                        </div>
                    </div>

                    <!-- –ò–ò –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è -->
                    <div id='aiSuggestions' class='mt-3' style='display: none;'></div>
                </div>

                <!-- –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
                <div class='card mb-4'>
                    <div class='card-header'>
                        <h6 class='m-0'>
                            <i class='fas fa-info-circle me-2'></i>
                            –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–∞
                        </h6>
                    </div>
                    <div class='card-body'>
                        <div class='row'>
                            <div class='col-md-8'>
                                <div class='mb-3'>
                                    <label class='form-label fw-semibold'>
                                        –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ <span class='text-danger'>*</span>
                                        <button type='button' class='btn btn-sm btn-outline-primary ms-1' onclick='aiGenerateName()'
                                                <?= $aiModuleStatus !== 'active' ? 'disabled' : '' ?>>
                                            <i class='fas fa-robot'></i>
                                        </button>
                                    </label>
                                    <input type='text' class='form-control form-control-lg' name='name' id='productName'
                                           required placeholder='–ù–∞–ø—Ä–∏–º–µ—Ä: –ê–Ω—É–±–∏–∞—Å –Ω–∞–Ω–∞ - –Ω–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ'
                                           value='<?= htmlspecialchars($_POST['name'] ?? '') ?>'>
                                </div>
                            </div>
                            <div class='col-md-4'>
                                <div class='mb-3'>
                                    <label class='form-label fw-semibold'>–ê—Ä—Ç–∏–∫—É–ª (SKU)</label>
                                    <div class='input-group'>
                                        <input type='text' class='form-control' name='sku' id='productSKU' 
                                               placeholder='–ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è'
                                               value='<?= htmlspecialchars($_POST['sku'] ?? '') ?>'>
                                        <button type='button' class='btn btn-outline-secondary' onclick='generateNewSKU()'>
                                            <i class='fas fa-sync'></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class='row'>
                            <div class='col-md-4'>
                                <div class='mb-3'>
                                    <label class='form-label fw-semibold'>–ö–∞—Ç–µ–≥–æ—Ä–∏—è <span class='text-danger'>*</span></label>
                                    <select class='form-select' name='category_id' id='productCategory' required>
                                        <option value=''>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
                                        <?php foreach ($categories as $category): ?>
                                            <option value='<?= $category['id'] ?>' 
                                                    <?= (($_POST['category_id'] ?? '') == $category['id']) ? 'selected' : '' ?>>
                                                <?= htmlspecialchars($category['name']) ?>
                                            </option>
                                        <?php endforeach; ?>
                                    </select>
                                </div>
                            </div>
                            <div class='col-md-4'>
                                <div class='mb-3'>
                                    <label class='form-label fw-semibold'>
                                        –¶–µ–Ω–∞ <span class='text-danger'>*</span>
                                        <button type='button' class='btn btn-sm btn-outline-warning ms-1' onclick='aiSuggestPrice()'
                                                <?= $aiModuleStatus !== 'active' ? 'disabled' : '' ?>>
                                            <i class='fas fa-robot'></i>
                                        </button>
                                    </label>
                                    <div class='input-group'>
                                        <input type='number' class='form-control' name='price' id='productPrice'
                                               required min='0' step='0.01' placeholder='0'
                                               value='<?= htmlspecialchars($_POST['price'] ?? '') ?>'>
                                        <span class='input-group-text'>‚ÇΩ</span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-md-4'>
                                <div class='mb-3'>
                                    <label class='form-label fw-semibold'>–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞</label>
                                    <div class='input-group'>
                                        <input type='number' class='form-control' name='old_price' id='productOldPrice'
                                               min='0' step='0.01' placeholder='0'
                                               value='<?= htmlspecialchars($_POST['old_price'] ?? '') ?>'>
                                        <span class='input-group-text'>‚ÇΩ</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- –û–ø–∏—Å–∞–Ω–∏—è -->
                <div class='card mb-4'>
                    <div class='card-header'>
                        <div class='d-flex justify-content-between align-items-center'>
                            <h6 class='m-0'>
                                <i class='fas fa-file-text me-2'></i>
                                –û–ø–∏—Å–∞–Ω–∏—è –∏ –∫–æ–Ω—Ç–µ–Ω—Ç
                            </h6>
                            <button type='button' class='btn btn-sm btn-light' onclick='aiGenerateDescription()'
                                    <?= $aiModuleStatus !== 'active' ? 'disabled' : '' ?>>
                                <i class='fas fa-robot me-1'></i>–ò–ò –ì–µ–Ω–µ—Ä–∞—Ü–∏—è
                            </button>
                        </div>
                    </div>
                    <div class='card-body'>
                        <div class='mb-3'>
                            <label class='form-label fw-semibold'>–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</label>
                            <textarea class='form-control' name='short_description' id='productShortDescription'
                                      rows='2' placeholder='–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞'><?= htmlspecialchars($_POST['short_description'] ?? '') ?></textarea>
                        </div>

                        <div class='mb-3'>
                            <label class='form-label fw-semibold'>–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ <span class='text-danger'>*</span></label>
                            <textarea class='form-control' name='description' id='productDescription'
                                      rows='8' required placeholder='–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞...'><?= htmlspecialchars($_POST['description'] ?? '') ?></textarea>
                        </div>

                        <div class='mb-0'>
                            <label class='form-label fw-semibold'>
                                –¢–µ–≥–∏ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)
                                <button type='button' class='btn btn-sm btn-outline-info ms-1' onclick='aiGenerateTags()'
                                        <?= $aiModuleStatus !== 'active' ? 'disabled' : '' ?>>
                                    <i class='fas fa-hashtag'></i>
                                </button>
                            </label>
                            <input type='text' class='form-control' name='tags' id='productTags'
                                   placeholder='–∞–∫–≤–∞—Ä–∏—É–º, —Ä–∞—Å—Ç–µ–Ω–∏—è, –¥–µ–∫–æ—Ä'
                                   value='<?= htmlspecialchars($_POST['tags'] ?? '') ?>'>
                        </div>
                    </div>
                </div>

                <!-- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è -->
                <div class='card mb-4'>
                    <div class='card-header'>
                        <h6 class='m-0'>
                            <i class='fas fa-images me-2'></i>
                            –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
                        </h6>
                    </div>
                    <div class='card-body'>
                        <div class='row'>
                            <div class='col-lg-6 mb-4'>
                                <label class='form-label fw-semibold'>–û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ <span class='text-danger'>*</span></label>
                                <div class='image-upload-area' id='mainImageUpload'>
                                    <i class='fas fa-cloud-upload-alt fa-4x text-primary mb-3'></i>
                                    <h5>–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—é–¥–∞</h5>
                                    <p class='text-muted mb-3'>–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞</p>
                                    <button type='button' class='btn btn-primary'>
                                        <i class='fas fa-folder-open me-1'></i>–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª
                                    </button>
                                </div>
                                <input type='hidden' name='main_image' id='mainImagePath' 
                                       value='<?= htmlspecialchars($_POST['main_image'] ?? '') ?>'>
                            </div>

                            <div class='col-lg-6 mb-4'>
                                <label class='form-label fw-semibold'>–ì–∞–ª–µ—Ä–µ—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</label>
                                <div class='image-upload-area' id='galleryUpload'>
                                    <i class='fas fa-images fa-4x text-primary mb-3'></i>
                                    <h6>–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞</h6>
                                    <p class='text-muted mb-3'>–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤</p>
                                    <button type='button' class='btn btn-primary'>
                                        <i class='fas fa-folder-open me-1'></i>–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª—ã
                                    </button>
                                </div>
                                <div id='galleryPreview' class='gallery-preview mt-3'></div>
                                <input type='hidden' name='gallery' id='galleryPaths' 
                                       value='<?= htmlspecialchars($_POST['gallery'] ?? '[]') ?>'>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ -->
                <div class='card mb-4'>
                    <div class='card-header'>
                        <h6 class='m-0'>
                            <i class='fas fa-cogs me-2'></i>
                            –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
                        </h6>
                    </div>
                    <div class='card-body'>
                        <div class='row'>
                            <div class='col-md-3 mb-3'>
                                <label class='form-label'>–†–∞–∑–º–µ—Ä</label>
                                <input type='text' class='form-control' name='size' placeholder='10-15 —Å–º'
                                       value='<?= htmlspecialchars($_POST['size'] ?? '') ?>'>
                            </div>
                            <div class='col-md-3 mb-3'>
                                <label class='form-label'>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞</label>
                                <input type='text' class='form-control' name='temperature' placeholder='22-26¬∞C'
                                       value='<?= htmlspecialchars($_POST['temperature'] ?? '') ?>'>
                            </div>
                            <div class='col-md-3 mb-3'>
                                <label class='form-label'>pH —É—Ä–æ–≤–µ–Ω—å</label>
                                <input type='text' class='form-control' name='ph_level' placeholder='6.0-7.5'
                                       value='<?= htmlspecialchars($_POST['ph_level'] ?? '') ?>'>
                            </div>
                            <div class='col-md-3 mb-3'>
                                <label class='form-label'>–û—Å–≤–µ—â–µ–Ω–∏–µ</label>
                                <select class='form-select' name='lighting'>
                                    <option value=''>–í—ã–±–µ—Ä–∏—Ç–µ</option>
                                    <option value='—Å–ª–∞–±–æ–µ' <?= (($_POST['lighting'] ?? '') === '—Å–ª–∞–±–æ–µ') ? 'selected' : '' ?>>üí° –°–ª–∞–±–æ–µ</option>
                                    <option value='—Å—Ä–µ–¥–Ω–µ–µ' <?= (($_POST['lighting'] ?? '') === '—Å—Ä–µ–¥–Ω–µ–µ') ? 'selected' : '' ?>>üí°üí° –°—Ä–µ–¥–Ω–µ–µ</option>
                                    <option value='—è—Ä–∫–æ–µ' <?= (($_POST['lighting'] ?? '') === '—è—Ä–∫–æ–µ') ? 'selected' : '' ?>>üí°üí°üí° –Ø—Ä–∫–æ–µ</option>
                                </select>
                            </div>
                        </div>
                        <div class='row'>
                            <div class='col-md-4 mb-3'>
                                <label class='form-label'>–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å</label>
                                <input type='text' class='form-control' name='manufacturer' placeholder='–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è'
                                       value='<?= htmlspecialchars($_POST['manufacturer'] ?? '') ?>'>
                            </div>
                            <div class='col-md-4 mb-3'>
                                <label class='form-label'>–°—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞</label>
                                <input type='text' class='form-control' name='country' placeholder='–†–æ—Å—Å–∏—è'
                                       value='<?= htmlspecialchars($_POST['country'] ?? '') ?>'>
                            </div>
                            <div class='col-md-4 mb-3'>
                                <label class='form-label'>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ —Å–∫–ª–∞–¥–µ</label>
                                <input type='number' class='form-control' name='stock_quantity' min='0' placeholder='0'
                                       value='<?= htmlspecialchars($_POST['stock_quantity'] ?? '') ?>'>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- –°–∫—Ä—ã—Ç—ã–µ –ø–æ–ª—è –¥–ª—è –ò–ò -->
                <input type='hidden' name='ai_generated' id='aiGeneratedFlag' value='0'>

                <!-- –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π -->
                <div class='card mb-4'>
                    <div class='card-body'>
                        <div class='d-flex justify-content-between align-items-center flex-wrap gap-3'>
                            <div>
                                <button type='button' class='btn btn-outline-secondary me-2' onclick='saveAsDraft()'>
                                    <i class='fas fa-save me-1'></i>–ß–µ—Ä–Ω–æ–≤–∏–∫
                                </button>
                                <button type='button' class='btn btn-outline-info me-2' onclick='previewProduct()'>
                                    <i class='fas fa-eye me-1'></i>–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
                                </button>
                            </div>
                            <div>
                                <button type='button' class='btn btn-secondary me-2' onclick='resetForm()'>
                                    <i class='fas fa-undo me-1'></i>–°–±—Ä–æ—Å–∏—Ç—å
                                </button>
                                <button type='submit' class='btn btn-success btn-lg'>
                                    <i class='fas fa-rocket me-1'></i>–°–æ–∑–¥–∞—Ç—å —Ç–æ–≤–∞—Ä
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

            </form>
        </div>

        <!-- –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å -->
        <div class='col-xl-4 col-lg-5'>
            <!-- –ñ–∏–≤–æ–π –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä -->
            <div class='live-preview mb-4'>
                <h6 class='mb-3'>
                    <i class='fas fa-eye me-2'></i>
                    –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
                </h6>
                <div class='text-center'>
                    <div class='ratio ratio-1x1 bg-light rounded mb-3'>
                        <img id='previewImage' class='d-none' style='object-fit: cover;'>
                        <i class='fas fa-fish fa-3x text-muted d-flex align-items-center justify-content-center' id='previewPlaceholder'></i>
                    </div>
                    <h6 id='previewName'>–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞</h6>
                    <p class='text-muted small' id='previewDescription'>–û–ø–∏—Å–∞–Ω–∏–µ –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å...</p>
                    <div class='d-flex justify-content-between align-items-center'>
                        <span class='h5 text-success mb-0' id='previewPrice'>0 ‚ÇΩ</span>
                        <small class='text-muted' id='previewCategory'>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</small>
                    </div>
                    <button class='btn btn-success w-100 mt-3'>
                        <i class='fas fa-shopping-cart me-2'></i>–ö—É–ø–∏—Ç—å
                    </button>
                </div>
            </div>

            <!-- SEO –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ -->
            <div class='card mb-4'>
                <div class='card-header'>
                    <div class='d-flex justify-content-between align-items-center'>
                        <h6 class='m-0'>
                            <i class='fas fa-search me-2'></i>
                            SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
                        </h6>
                        <button type='button' class='btn btn-sm btn-light' onclick='aiOptimizeSEO()'
                                <?= $aiModuleStatus !== 'active' ? 'disabled' : '' ?>>
                            <i class='fas fa-robot me-1'></i>–ò–ò SEO
                        </button>
                    </div>
                </div>
                <div class='card-body'>
                    <div class='mb-3'>
                        <label class='form-label small'>Meta Title <span id='metaTitleLength' class='text-muted'>(0/60)</span></label>
                        <input type='text' class='form-control form-control-sm' name='meta_title' id='metaTitle'
                               maxlength='60' placeholder='SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã'
                               value='<?= htmlspecialchars($_POST['meta_title'] ?? '') ?>'>
                    </div>
                    <div class='mb-0'>
                        <label class='form-label small'>Meta Description <span id='metaDescLength' class='text-muted'>(0/160)</span></label>
                        <textarea class='form-control form-control-sm' name='meta_description' id='metaDescription'
                                  rows='3' maxlength='160' placeholder='–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º'><?= htmlspecialchars($_POST['meta_description'] ?? '') ?></textarea>
                    </div>
                    <div class='mt-2'>
                        <small class='text-muted'>SEO –∫–∞—á–µ—Å—Ç–≤–æ: <span id='seoScore' class='text-primary'>0%</span></small>
                        <div class='progress mt-1' style='height: 4px;'>
                            <div id='seoScoreBar' class='progress-bar' style='width: 0%'></div>
                        </div>
                    </div>
                </div>
            </div>

            <?php if ($aiModuleStatus === 'active'): ?>
            <!-- –ò–ò –ê–Ω–∞–ª–∏–∑ -->
            <div class='card'>
                <div class='card-header'>
                    <h6 class='m-0'>
                        <i class='fas fa-chart-line me-2'></i>
                        –ò–ò –ê–Ω–∞–ª–∏–∑
                    </h6>
                </div>
                <div class='card-body'>
                    <div id='aiAnalysisResults'>
                        <div class='text-center text-muted'>
                            <i class='fas fa-robot fa-2x mb-2'></i>
                            <p>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ò–ò –∞–Ω–∞–ª–∏–∑–∞</p>
                        </div>
                    </div>
                </div>
            </div>
            <?php endif; ?>
        </div>
    </div>
</div>

<!-- Bootstrap JS -->
<script src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js'></script>

<script>
// ============================================================================
// üì¶ –°–û–ó–î–ê–¢–ï–õ–¨ –¢–û–í–ê–†–û–í v4.2 - JAVASCRIPT –° –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô –ò–ò –ò–ù–¢–ï–ì–†–ê–¶–ò–ï–ô
// ============================================================================

let galleryImages = [];
const aiModuleActive = <?= json_encode($aiModuleStatus === 'active') ?>;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {
    console.log('üì¶ –°–æ–∑–¥–∞—Ç–µ–ª—å —Ç–æ–≤–∞—Ä–æ–≤ v4.2 –∑–∞–≥—Ä—É–∂–µ–Ω');
    console.log('ü§ñ –ò–ò –º–æ–¥—É–ª—å:', aiModuleActive ? '–ê–ö–¢–ò–í–ï–ù' : '–ó–ê–ì–õ–£–®–ö–ê');

    initializeFormHandlers();
    initializeImageUploads();
    initializeLivePreview();
    initializeSEOCounters();

    // –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ SKU
    if (!document.getElementById('productSKU').value) {
        generateNewSKU();
    }

    // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –µ—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ
    const existingGallery = document.getElementById('galleryPaths').value;
    if (existingGallery && existingGallery !== '[]') {
        try {
            galleryImages = JSON.parse(existingGallery);
            updateGalleryPreview();
        } catch (e) {
            console.warn('–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –≥–∞–ª–µ—Ä–µ–∏:', e);
        }
    }

    // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const existingMainImage = document.getElementById('mainImagePath').value;
    if (existingMainImage) {
        setMainImage(existingMainImage);
    }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ñ–æ—Ä–º—ã
function initializeFormHandlers() {
    const form = document.getElementById('productForm');
    const inputs = form.querySelectorAll('input, select, textarea');

    inputs.forEach(input => {
        input.addEventListener('input', updateLivePreview);
        input.addEventListener('change', updateLivePreview);
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤ SEO
function initializeSEOCounters() {
    const metaTitle = document.getElementById('metaTitle');
    const metaDescription = document.getElementById('metaDescription');

    metaTitle.addEventListener('input', updateSEOCounters);
    metaDescription.addEventListener('input', updateSEOCounters);

    updateSEOCounters();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–æ–≤ SEO
function updateSEOCounters() {
    const metaTitle = document.getElementById('metaTitle');
    const metaDescription = document.getElementById('metaDescription');
    const titleLength = document.getElementById('metaTitleLength');
    const descLength = document.getElementById('metaDescLength');

    titleLength.textContent = `(${metaTitle.value.length}/60)`;
    descLength.textContent = `(${metaDescription.value.length}/160)`;

    // –í—ã—á–∏—Å–ª–µ–Ω–∏–µ SEO Score
    let score = 0;
    if (metaTitle.value.length > 0 && metaTitle.value.length <= 60) score += 40;
    if (metaDescription.value.length > 0 && metaDescription.value.length <= 160) score += 40;
    if (document.getElementById('productTags').value.length > 0) score += 20;

    document.getElementById('seoScore').textContent = score + '%';
    const scoreBar = document.getElementById('seoScoreBar');
    scoreBar.style.width = score + '%';
    scoreBar.className = 'progress-bar ' + (score >= 80 ? 'bg-success' : score >= 50 ? 'bg-warning' : 'bg-danger');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
function initializeImageUploads() {
    const mainUpload = document.getElementById('mainImageUpload');
    const galleryUpload = document.getElementById('galleryUpload');

    if (mainUpload) setupImageUpload(mainUpload, 'main');
    if (galleryUpload) setupImageUpload(galleryUpload, 'gallery');
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
function setupImageUpload(element, type) {
    element.addEventListener('click', () => selectFiles(type));

    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
        element.addEventListener(eventName, (e) => {
            e.preventDefault();
            e.stopPropagation();
        });
    });

    element.addEventListener('dragover', () => element.style.background = '#e3f2fd');
    element.addEventListener('dragleave', () => element.style.background = '');
    element.addEventListener('drop', (e) => {
        element.style.background = '';
        const files = Array.from(e.dataTransfer.files);
        if (files.length > 0) processFiles(files, type);
    });
}

// –í—ã–±–æ—Ä —Ñ–∞–π–ª–æ–≤
function selectFiles(type) {
    const input = document.createElement('input');
    input.type = 'file';
    input.accept = 'image/*';
    input.multiple = type === 'gallery';

    input.onchange = (e) => {
        const files = Array.from(e.target.files);
        if (files.length > 0) processFiles(files, type);
    };

    input.click();
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤
function processFiles(files, type) {
    files.forEach(file => {
        if (!file.type.startsWith('image/')) return;

        const reader = new FileReader();
        reader.onload = function(e) {
            if (type === 'main') {
                setMainImage(e.target.result);
            } else {
                addToGallery(e.target.result);
            }
            updateLivePreview();
        };
        reader.readAsDataURL(file);
    });
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function setMainImage(imageSrc) {
    const mainUpload = document.getElementById('mainImageUpload');
    const mainPath = document.getElementById('mainImagePath');

    mainUpload.innerHTML = `
        <img src='${imageSrc}' style='width: 100%; height: 200px; object-fit: cover; border-radius: 15px;'>
        <button type='button' class='btn btn-danger btn-sm position-absolute top-0 end-0 m-2' onclick='removeMainImage()'>
            <i class='fas fa-times'></i>
        </button>
    `;

    mainPath.value = imageSrc;
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –≥–∞–ª–µ—Ä–µ—é
function addToGallery(imageSrc) {
    galleryImages.push(imageSrc);
    updateGalleryPreview();
    updateGalleryInput();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–≤—å—é –≥–∞–ª–µ—Ä–µ–∏
function updateGalleryPreview() {
    const preview = document.getElementById('galleryPreview');

    preview.innerHTML = galleryImages.map((src, index) => `
        <div class='gallery-item'>
            <img src='${src}' style='width: 100%; height: 150px; object-fit: cover;'>
            <button type='button' class='btn btn-danger btn-sm position-absolute top-0 end-0 m-1'
                    onclick='removeFromGallery(${index})'>
                <i class='fas fa-times'></i>
            </button>
        </div>
    `).join('');
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç–æ–≥–æ –ø–æ–ª—è –≥–∞–ª–µ—Ä–µ–∏
function updateGalleryInput() {
    document.getElementById('galleryPaths').value = JSON.stringify(galleryImages);
}

// –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏
function removeFromGallery(index) {
    galleryImages.splice(index, 1);
    updateGalleryPreview();
    updateGalleryInput();
}

// –£–¥–∞–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function removeMainImage() {
    const mainUpload = document.getElementById('mainImageUpload');
    const mainPath = document.getElementById('mainImagePath');

    mainUpload.innerHTML = `
        <i class='fas fa-cloud-upload-alt fa-4x text-primary mb-3'></i>
        <h5>–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—é–¥–∞</h5>
        <p class='text-muted mb-3'>–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞</p>
        <button type='button' class='btn btn-primary'>
            <i class='fas fa-folder-open me-1'></i>–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª
        </button>
    `;

    mainPath.value = '';
    updateLivePreview();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∂–∏–≤–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
function initializeLivePreview() {
    updateLivePreview();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∂–∏–≤–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
function updateLivePreview() {
    const name = document.getElementById('productName').value || '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞';
    const price = document.getElementById('productPrice').value || '0';
    const description = document.getElementById('productShortDescription').value ||
                       document.getElementById('productDescription').value || '–û–ø–∏—Å–∞–Ω–∏–µ –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å...';
    const categorySelect = document.getElementById('productCategory');
    const category = categorySelect.selectedOptions[0]?.text || '–ö–∞—Ç–µ–≥–æ—Ä–∏—è';

    document.getElementById('previewName').textContent = name;
    document.getElementById('previewPrice').textContent = formatPrice(price);
    document.getElementById('previewCategory').textContent = category;

    const previewDesc = document.getElementById('previewDescription');
    previewDesc.textContent = description.length > 100 ?
        description.substring(0, 100) + '...' : description;

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const mainImage = document.getElementById('mainImagePath').value;
    const previewImg = document.getElementById('previewImage');
    const previewPlaceholder = document.getElementById('previewPlaceholder');

    if (mainImage) {
        previewImg.src = mainImage;
        previewImg.classList.remove('d-none');
        previewPlaceholder.style.display = 'none';
    } else {
        previewImg.classList.add('d-none');
        previewPlaceholder.style.display = 'flex';
    }

    updateSEOCounters();
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ SKU
function generateNewSKU() {
    const newSKU = 'PROD_' + Math.random().toString(36).substr(2, 8).toUpperCase();
    document.getElementById('productSKU').value = newSKU;
    showNotification('üîÑ –ù–æ–≤—ã–π SKU —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!', 'success');
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞–∫ —á–µ—Ä–Ω–æ–≤–∏–∫
function saveAsDraft() {
    const formData = new FormData(document.getElementById('productForm'));
    const draftData = {};

    formData.forEach((value, key) => {
        draftData[key] = value;
    });

    localStorage.setItem('product_draft', JSON.stringify(draftData));
    showNotification('üíæ –ß–µ—Ä–Ω–æ–≤–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!', 'success');
}

// –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞
function previewProduct() {
    showNotification('üëÅÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∫—Ä—ã—Ç!', 'info');
}

// –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
function resetForm() {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å —Ñ–æ—Ä–º—É?')) {
        document.getElementById('productForm').reset();
        galleryImages = [];
        updateGalleryPreview();
        updateGalleryInput();
        document.getElementById('mainImagePath').value = '';
        removeMainImage();
        document.getElementById('aiGeneratedFlag').value = '0';
        updateLivePreview();
        clearAISuggestions();
        showNotification('üßπ –§–æ—Ä–º–∞ –æ—á–∏—â–µ–Ω–∞!', 'info');
    }
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã
function formatPrice(price) {
    return new Intl.NumberFormat('ru-RU', {
        style: 'currency',
        currency: 'RUB',
        minimumFractionDigits: 0
    }).format(parseFloat(price) || 0);
}

// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
function showNotification(message, type = 'success') {
    const alertClass = type === 'success' ? 'alert-success' :
                       type === 'error' ? 'alert-danger' : 'alert-info';

    const notification = document.createElement('div');
    notification.className = `alert ${alertClass} alert-dismissible fade show position-fixed`;
    notification.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
    notification.innerHTML = `
        ${message}
        <button type='button' class='btn-close' data-bs-dismiss='alert'></button>
    `;

    document.body.appendChild(notification);

    setTimeout(() => {
        if (notification.parentNode) {
            notification.remove();
        }
    }, 5000);
}

// ============================================================================
// –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ò–ò –ò–ù–¢–ï–ì–†–ê–¶–ò–ò - –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï
// ============================================================================

// –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å —Å–ø–∏–Ω–Ω–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
function toggleAISpinner(show) {
    const spinner = document.getElementById('aiLoadingSpinner');
    spinner.style.display = show ? 'inline-block' : 'none';
}

// –ü–æ–∫–∞–∑–∞—Ç—å –ò–ò –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
function showAISuggestions(suggestions) {
    const container = document.getElementById('aiSuggestions');

    if (suggestions && suggestions.length > 0) {
        container.innerHTML = suggestions.map(suggestion => `
            <div class='ai-suggestion'>
                <small class='text-muted d-block'>${suggestion.type}</small>
                <div>${suggestion.content}</div>
            </div>
        `).join('');
        container.style.display = 'block';
    } else {
        container.style.display = 'none';
    }
}

// –û—á–∏—Å—Ç–∏—Ç—å –ò–ò –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
function clearAISuggestions() {
    document.getElementById('aiSuggestions').style.display = 'none';
}

// –ü–æ–ª–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ò–ò
async function aiGenerateAll() {
    if (!aiModuleActive) {
        showNotification('‚ùå –ò–ò –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', 'error');
        return;
    }

    const name = document.getElementById('productName').value.trim();
    const category = document.getElementById('productCategory').value;

    if (!name) {
        showNotification('‚ùå –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏', 'error');
        return;
    }

    if (!category) {
        showNotification('‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞', 'error');
        return;
    }

    await callAIFunction('generate_all', {
        product_name: name,
        category: category
    });
}

// –£–ª—É—á—à–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –ò–ò
async function aiImproveProduct() {
    if (!aiModuleActive) {
        showNotification('‚ùå –ò–ò –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', 'error');
        return;
    }

    const productData = {
        product_name: document.getElementById('productName').value,
        description: document.getElementById('productDescription').value,
        price: document.getElementById('productPrice').value,
        category: document.getElementById('productCategory').value,
        main_image: document.getElementById('mainImagePath').value
    };

    await callAIFunction('improve_product', productData);
}

// –ê–Ω–∞–ª–∏–∑ —Ç–æ–≤–∞—Ä–∞ –ò–ò
async function aiAnalyzeProduct() {
    if (!aiModuleActive) {
        showNotification('‚ùå –ò–ò –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', 'error');
        return;
    }

    const productData = {
        product_name: document.getElementById('productName').value,
        description: document.getElementById('productDescription').value,
        price: document.getElementById('productPrice').value,
        category: document.getElementById('productCategory').value,
        main_image: document.getElementById('mainImagePath').value
    };

    await callAIFunction('analyze_product', productData);
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –ò–ò
async function aiGenerateName() {
    if (!aiModuleActive) {
        showNotification('‚ùå –ò–ò –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', 'error');
        return;
    }

    const category = document.getElementById('productCategory').value;
    if (!category) {
        showNotification('‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è', 'error');
        return;
    }

    await callAIFunction('generate_name', {
        category: category,
        keywords: document.getElementById('productTags').value
    });
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –ò–ò
async function aiGenerateDescription() {
    if (!aiModuleActive) {
        showNotification('‚ùå –ò–ò –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', 'error');
        return;
    }

    const name = document.getElementById('productName').value.trim();
    const category = document.getElementById('productCategory').value;

    if (!name) {
        showNotification('‚ùå –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è', 'error');
        return;
    }

    await callAIFunction('generate_description', {
        product_name: name,
        category: category
    });
}

// –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã –ò–ò
async function aiSuggestPrice() {
    if (!aiModuleActive) {
        showNotification('‚ùå –ò–ò –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', 'error');
        return;
    }

    const name = document.getElementById('productName').value.trim();
    const category = document.getElementById('productCategory').value;

    if (!name) {
        showNotification('‚ùå –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ü–µ–Ω—ã', 'error');
        return;
    }

    await callAIFunction('suggest_price', {
        product_name: name,
        category: category
    });
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–≥–æ–≤ –ò–ò
async function aiGenerateTags() {
    if (!aiModuleActive) {
        showNotification('‚ùå –ò–ò –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', 'error');
        return;
    }

    const name = document.getElementById('productName').value.trim();
    const description = document.getElementById('productDescription').value.trim();
    const category = document.getElementById('productCategory').value;

    if (!name && !description) {
        showNotification('‚ùå –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–≥–æ–≤', 'error');
        return;
    }

    await callAIFunction('generate_tags', {
        product_name: name,
        description: description,
        category: category
    });
}

// –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è SEO –ò–ò
async function aiOptimizeSEO() {
    if (!aiModuleActive) {
        showNotification('‚ùå –ò–ò –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', 'error');
        return;
    }

    const name = document.getElementById('productName').value.trim();
    const description = document.getElementById('productDescription').value.trim();
    const category = document.getElementById('productCategory').value;

    if (!name || !description) {
        showNotification('‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏', 'error');
        return;
    }

    await callAIFunction('optimize_seo', {
        product_name: name,
        description: description,
        category: category
    });
}

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑–æ–≤–∞ –ò–ò - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
async function callAIFunction(action, extraData = {}) {
    try {
        toggleAISpinner(true);
        showNotification('ü§ñ –ò–ò –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å...', 'info');

        const formData = new FormData();
        formData.append('ai_action', action);

        // –ë–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
        formData.append('product_name', document.getElementById('productName').value);
        formData.append('category', document.getElementById('productCategory').value);
        formData.append('description', document.getElementById('productDescription').value);
        formData.append('price', document.getElementById('productPrice').value);

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        Object.keys(extraData).forEach(key => {
            formData.append(key, extraData[key]);
        });

        const response = await fetch(window.location.href, {
            method: 'POST',
            body: formData
        });

        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
        const responseText = await response.text();
        console.log('AI Response Text:', responseText);

        let result;
        try {
            result = JSON.parse(responseText);
        } catch (parseError) {
            console.error('JSON Parse Error:', parseError);
            console.error('Response text:', responseText);
            throw new Error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞');
        }

        console.log('AI Parsed Result:', result);

        if (result.success) {
            // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—è —Ñ–æ—Ä–º—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç –ò–ò
            if (result.name) {
                document.getElementById('productName').value = result.name;
            }
            if (result.description) {
                document.getElementById('productDescription').value = result.description;
            }
            if (result.short_description) {
                document.getElementById('productShortDescription').value = result.short_description;
            }
            if (result.price) {
                document.getElementById('productPrice').value = result.price;
            }
            if (result.old_price) {
                document.getElementById('productOldPrice').value = result.old_price;
            }
            if (result.tags) {
                document.getElementById('productTags').value = result.tags;
            }
            if (result.meta_title) {
                document.getElementById('metaTitle').value = result.meta_title;
            }
            if (result.meta_description) {
                document.getElementById('metaDescription').value = result.meta_description;
            }

            // –û—Ç–º–µ—á–∞–µ–º —á—Ç–æ —Ç–æ–≤–∞—Ä —Å–æ–∑–¥–∞–Ω —Å –ø–æ–º–æ—â—å—é –ò–ò
            document.getElementById('aiGeneratedFlag').value = '1';

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∞–ª–∏–∑ –µ—Å–ª–∏ –µ—Å—Ç—å
            if (result.analysis) {
                showAIAnalysis(result.analysis);
            }

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–ª—É—á—à–µ–Ω–∏—è –µ—Å–ª–∏ –µ—Å—Ç—å
            if (result.improvements) {
                showAIImprovements(result.improvements);
            }

            updateLivePreview();
            showNotification('‚ú® –ò–ò —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–ª –¥–∞–Ω–Ω—ã–µ!', 'success');
        } else {
            let errorMessage = result.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';

            // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –µ—Å–ª–∏ –µ—Å—Ç—å
            if (result.debug) {
                console.error('AI Debug Info:', result.debug);
                errorMessage += ' (—Å–º. –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –¥–µ—Ç–∞–ª–µ–π)';
            }

            showNotification('‚ùå –û—à–∏–±–∫–∞ –ò–ò: ' + errorMessage, 'error');
        }

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ò–ò:', error);
        showNotification('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ò–ò: ' + error.message, 'error');
    } finally {
        toggleAISpinner(false);
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å –ò–ò –∞–Ω–∞–ª–∏–∑
function showAIAnalysis(analysis) {
    const container = document.getElementById('aiAnalysisResults');
    if (!container) return;

    container.innerHTML = `
        <div class='mb-3'>
            <small class='text-muted'>–ü–æ–ª–Ω–æ—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è</small>
            <div class='progress mb-1' style='height: 8px;'>
                <div class='progress-bar bg-info' style='width: ${analysis.completeness}%'></div>
            </div>
            <small>${Math.round(analysis.completeness)}%</small>
        </div>

        <div class='mb-3'>
            <small class='text-muted'>–ö–∞—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞</small>
            <div class='progress mb-1' style='height: 8px;'>
                <div class='progress-bar bg-success' style='width: ${analysis.quality_score}%'></div>
            </div>
            <small>${Math.round(analysis.quality_score)}%</small>
        </div>

        <div class='mb-3'>
            <small class='text-muted'>SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è</small>
            <div class='progress mb-1' style='height: 8px;'>
                <div class='progress-bar bg-warning' style='width: ${analysis.seo_optimization}%'></div>
            </div>
            <small>${Math.round(analysis.seo_optimization)}%</small>
        </div>

        ${analysis.recommendations && analysis.recommendations.length > 0 ? `
            <div class='mt-3'>
                <small class='text-muted d-block mb-2'>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</small>
                ${analysis.recommendations.map(rec => `
                    <div class='alert alert-info alert-sm py-2 px-3 mb-1'>
                        <small>${rec}</small>
                    </div>
                `).join('')}
            </div>
        ` : ''}
    `;
}

// –ü–æ–∫–∞–∑–∞—Ç—å –ò–ò —É–ª—É—á—à–µ–Ω–∏—è
function showAIImprovements(improvements) {
    const suggestions = [];

    Object.keys(improvements).forEach(field => {
        if (improvements[field]) {
            suggestions.push({
                type: '–£–ª—É—á—à–µ–Ω–∏–µ ' + field,
                content: improvements[field].toString().substring(0, 100) + '...'
            });
        }
    });

    showAISuggestions(suggestions);
}

console.log('‚úÖ –°–æ–∑–¥–∞—Ç–µ–ª—å —Ç–æ–≤–∞—Ä–æ–≤ v4.2 –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
console.log('ü§ñ –ò–ò –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:', aiModuleActive ? '–ê–ö–¢–ò–í–ù–ê' : '–ó–ê–ì–õ–£–®–ö–ê');
</script>

</body>
</html>
