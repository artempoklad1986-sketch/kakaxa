<?php
// –ü–æ–¥–∫–ª—é—á–∞–µ–º functions.php (—Å–µ—Å—Å–∏—è —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞ —Ç–∞–º)
require_once '../functions.php';

$categories = getCategories();
$message = '';
$messageType = '';

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['create_product'])) {
    $result = saveProduct($_POST);
    if ($result['success']) {
        $message = '–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!';
        $messageType = 'success';
    } else {
        $message = '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞: ' . ($result['error'] ?? '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
        $messageType = 'error';
    }
}
?>

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ —Å –ò–ò –ø–æ–º–æ—â–Ω–∏–∫–æ–º</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- Animate.css -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <!-- Dropzone.js -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/6.0.0-beta.1/dropzone.min.css">
    <!-- Toastr CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">

    <style>
        :root {
            --primary-color: #667eea;
            --secondary-color: #764ba2;
            --success-color: #10ac84;
            --warning-color: #ee5a24;
            --danger-color: #ff3838;
            --info-color: #3c6382;
            --light-color: #f8f9fa;
            --dark-color: #2f3640;
            --gradient-primary: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --gradient-success: linear-gradient(135deg, #10ac84 0%, #1dd1a1 100%);
            --gradient-danger: linear-gradient(135deg, #ff3838 0%, #ff6b6b 100%);
            --gradient-info: linear-gradient(135deg, #3c6382 0%, #40739e 100%);
            --shadow: 0 15px 35px rgba(50, 50, 93, 0.1), 0 5px 15px rgba(0, 0, 0, 0.07);
            --shadow-hover: 0 20px 40px rgba(50, 50, 93, 0.15), 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            min-height: 100vh;
            padding: 20px 0;
        }

        .main-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 25px;
            box-shadow: var(--shadow);
            padding: 0;
            overflow: hidden;
            margin: 20px auto;
            max-width: 1400px;
        }

        .header-section {
            background: var(--gradient-primary);
            color: white;
            padding: 30px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .header-section::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(45deg, transparent 30%, rgba(255,255,255,0.1) 50%, transparent 70%);
            transform: rotate(45deg);
            animation: shimmer 3s infinite;
        }

        @keyframes shimmer {
            0% { transform: translateX(-100%) rotate(45deg); }
            100% { transform: translateX(100%) rotate(45deg); }
        }

        .ai-assistant-panel {
            background: linear-gradient(135deg, #4834d4 0%, #686de0 100%);
            border-radius: 20px;
            padding: 25px;
            margin-bottom: 30px;
            color: white;
            box-shadow: var(--shadow);
            position: relative;
            overflow: hidden;
        }

        .ai-assistant-panel::before {
            content: 'ü§ñ';
            position: absolute;
            top: -10px;
            right: -10px;
            font-size: 60px;
            opacity: 0.1;
        }

        .ai-btn {
            background: var(--gradient-success);
            border: none;
            border-radius: 15px;
            color: white;
            padding: 12px 25px;
            font-weight: 600;
            box-shadow: var(--shadow);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            width: 100%;
            margin-bottom: 10px;
        }

        .ai-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.5s;
        }

        .ai-btn:hover {
            transform: translateY(-3px);
            box-shadow: var(--shadow-hover);
            background: var(--gradient-success);
            color: white;
        }

        .ai-btn:hover::before {
            left: 100%;
        }

        .ai-btn:active {
            transform: translateY(-1px);
        }

        .form-floating {
            margin-bottom: 20px;
        }

        .form-control, .form-select {
            border: 2px solid #e9ecef;
            border-radius: 15px;
            padding: 20px 15px;
            font-size: 16px;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.9);
        }

        .form-control:focus, .form-select:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.25rem rgba(102, 126, 234, 0.15);
            transform: translateY(-2px);
        }

        .form-label {
            font-weight: 600;
            color: var(--dark-color);
            font-size: 14px;
        }

        /* –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –≥–∞–ª–µ—Ä–µ—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */
        .image-gallery-section {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            border-radius: 20px;
            padding: 25px;
            margin-bottom: 30px;
            color: white;
        }

        .dropzone-container {
            position: relative;
            margin-bottom: 20px;
        }

        .simple-upload {
            border: 3px dashed rgba(255, 255, 255, 0.5);
            border-radius: 20px;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 40px;
            text-align: center;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .simple-upload:hover {
            border-color: white;
            background: rgba(255, 255, 255, 0.2);
            transform: scale(1.02);
        }

        .simple-upload input[type="file"] {
            display: none;
        }

        .upload-text {
            font-size: 18px;
            font-weight: 600;
            color: white;
        }

        .upload-note {
            font-size: 14px;
            font-weight: normal;
            margin-top: 10px;
            opacity: 0.8;
        }

        .image-preview-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .image-preview-item {
            position: relative;
            border-radius: 15px;
            overflow: hidden;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 10px;
            transition: all 0.3s ease;
        }

        .image-preview-item:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-hover);
        }

        .image-preview-item img {
            width: 100%;
            height: 150px;
            object-fit: cover;
            border-radius: 10px;
        }

        .image-controls {
            position: absolute;
            top: 15px;
            right: 15px;
            display: flex;
            gap: 5px;
        }

        .image-control-btn {
            background: rgba(0, 0, 0, 0.7);
            border: none;
            border-radius: 50%;
            width: 35px;
            height: 35px;
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .image-control-btn:hover {
            background: var(--danger-color);
            transform: scale(1.1);
        }

        .image-main-badge {
            position: absolute;
            bottom: 10px;
            left: 10px;
            background: var(--gradient-success);
            color: white;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
        }

        /* SEO –±–ª–æ–∫ */
        .seo-optimization-section {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            border-radius: 20px;
            padding: 25px;
            margin-bottom: 30px;
            color: white;
        }

        .seo-score {
            display: inline-block;
            background: rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(10px);
            border-radius: 50px;
            padding: 10px 20px;
            font-weight: 600;
            margin-bottom: 15px;
        }

        .seo-recommendations {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 15px;
            margin-top: 15px;
        }

        .seo-recommendation {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }

        .seo-recommendation i {
            margin-right: 10px;
            color: #ffeaa7;
        }

        /* –ê–Ω–∞–ª–∏–∑ —Ç–æ–≤–∞—Ä–∞ */
        .product-analysis {
            background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
            border-radius: 20px;
            padding: 25px;
            margin-bottom: 30px;
            color: var(--dark-color);
        }

        .analysis-metric {
            text-align: center;
            padding: 20px;
            background: rgba(255, 255, 255, 0.5);
            border-radius: 15px;
            margin-bottom: 15px;
        }

        .analysis-score {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 10px;
        }

        .score-excellent { color: var(--success-color); }
        .score-good { color: var(--info-color); }
        .score-average { color: var(--warning-color); }
        .score-poor { color: var(--danger-color); }

        /* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */
        .action-buttons {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
            justify-content: center;
            padding: 30px;
        }

        .btn-create {
            background: var(--gradient-success);
            border: none;
            border-radius: 20px;
            color: white;
            padding: 15px 40px;
            font-size: 18px;
            font-weight: 600;
            box-shadow: var(--shadow);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .btn-create::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.5s;
        }

        .btn-create:hover {
            transform: translateY(-3px);
            box-shadow: var(--shadow-hover);
            background: var(--gradient-success);
            color: white;
        }

        .btn-create:hover::before {
            left: 100%;
        }

        .btn-preview {
            background: var(--gradient-info);
            border: none;
            border-radius: 20px;
            color: white;
            padding: 15px 30px;
            font-weight: 600;
            box-shadow: var(--shadow);
            transition: all 0.3s ease;
        }

        .btn-preview:hover {
            transform: translateY(-3px);
            box-shadow: var(--shadow-hover);
            background: var(--gradient-info);
            color: white;
        }

        /* –ó–∞–≥—Ä—É–∑—á–∏–∫–∏ */
        .ai-loading {
            display: none;
            text-align: center;
            padding: 20px;
        }

        .ai-loading .spinner {
            width: 40px;
            height: 40px;
            border: 4px solid rgba(255, 255, 255, 0.3);
            border-left-color: white;
            border-radius: 50%;
            animation: spin 1s infinite linear;
            margin: 0 auto 15px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã */
        .advanced-field {
            position: relative;
            margin-bottom: 25px;
        }

        .field-icon {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--primary-color);
            z-index: 10;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .field-icon:hover {
            color: var(--success-color);
            transform: translateY(-50%) scale(1.2);
        }

        .character-counter {
            font-size: 12px;
            color: #6c757d;
            margin-top: 5px;
            text-align: right;
        }

        /* –°—Ç–∞—Ç—É—Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ò–ò */
        .ai-status {
            position: fixed;
            bottom: 20px;
            left: 20px;
            background: rgba(0, 0, 0, 0.8);
            color: white;
            padding: 10px 15px;
            border-radius: 25px;
            font-size: 12px;
            z-index: 1000;
        }

        .ai-status.online { background: var(--gradient-success); }
        .ai-status.offline { background: var(--gradient-danger); }

        /* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å */
        @media (max-width: 768px) {
            .main-container {
                margin: 10px;
                border-radius: 15px;
            }

            .header-section, .ai-assistant-panel, .image-gallery-section, 
            .seo-optimization-section, .product-analysis {
                padding: 20px;
                border-radius: 15px;
            }

            .action-buttons {
                flex-direction: column;
            }

            .btn-create, .btn-preview {
                width: 100%;
                margin-bottom: 10px;
            }

            .image-preview-grid {
                grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
                gap: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="main-container">
            <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ -->
            <div class="header-section">
                <h1 class="mb-0"><i class="fas fa-plus-circle me-3"></i>–°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ —Å –ò–ò –ø–æ–º–æ—â–Ω–∏–∫–æ–º</h1>
                <p class="mt-2 mb-0">–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞</p>
            </div>

            <div class="p-4">
                <?php if ($message): ?>
                    <div class="alert alert-<?= $messageType === 'success' ? 'success' : 'danger' ?> alert-dismissible fade show animate__animated animate__fadeInDown" role="alert">
                        <i class="fas fa-<?= $messageType === 'success' ? 'check-circle' : 'exclamation-triangle' ?> me-2"></i>
                        <?= htmlspecialchars($message) ?>
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                <?php endif; ?>

                <form id="productForm" method="POST" enctype="multipart/form-data">
                    <div class="row">
                        <!-- –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
                        <div class="col-lg-8">
                            <!-- –ò–ò –ü–æ–º–æ—â–Ω–∏–∫ -->
                            <div class="ai-assistant-panel animate__animated animate__fadeInLeft">
                                <h3><i class="fas fa-robot me-2"></i>–ò–ò –ü–æ–º–æ—â–Ω–∏–∫</h3>
                                <p>–ü–æ–∑–≤–æ–ª—å—Ç–µ –ò–ò —Å–æ–∑–¥–∞—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–ª–∏ –ø–æ–º–æ—á—å —Å –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏</p>

                                <div class="row g-3">
                                    <div class="col-md-4">
                                        <button type="button" class="ai-btn" onclick="generateAll()">
                                            <i class="fas fa-magic me-2"></i>–°–æ–∑–¥–∞—Ç—å –≤—Å—ë
                                        </button>
                                    </div>
                                    <div class="col-md-4">
                                        <button type="button" class="ai-btn" onclick="generateName()">
                                            <i class="fas fa-signature me-2"></i>–ù–∞–∑–≤–∞–Ω–∏–µ
                                        </button>
                                    </div>
                                    <div class="col-md-4">
                                        <button type="button" class="ai-btn" onclick="generateDescription()">
                                            <i class="fas fa-file-text me-2"></i>–û–ø–∏—Å–∞–Ω–∏–µ
                                        </button>
                                    </div>
                                    <div class="col-md-4">
                                        <button type="button" class="ai-btn" onclick="suggestPrice()">
                                            <i class="fas fa-tags me-2"></i>–¶–µ–Ω–∞
                                        </button>
                                    </div>
                                    <div class="col-md-4">
                                        <button type="button" class="ai-btn" onclick="optimizeSEO()">
                                            <i class="fas fa-search me-2"></i>SEO
                                        </button>
                                    </div>
                                    <div class="col-md-4">
                                        <button type="button" class="ai-btn" onclick="analyzeProduct()">
                                            <i class="fas fa-chart-line me-2"></i>–ê–Ω–∞–ª–∏–∑
                                        </button>
                                    </div>
                                </div>

                                <div class="ai-loading" id="aiLoading">
                                    <div class="spinner"></div>
                                    <div>–ò–ò –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å...</div>
                                </div>
                            </div>

                            <!-- –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è -->
                            <div class="row g-4">
                                <div class="col-md-6">
                                    <div class="form-floating advanced-field">
                                        <input type="text" class="form-control" id="name" name="name" placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞" required>
                                        <label for="name"><i class="fas fa-tag me-2"></i>–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞</label>
                                        <i class="fas fa-wand-magic-sparkles field-icon" title="–£–ª—É—á—à–∏—Ç—å —Å –ò–ò" onclick="generateName()"></i>
                                        <div class="character-counter"><span id="nameCount">0</span>/80 —Å–∏–º–≤–æ–ª–æ–≤</div>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <select class="form-select" id="category_id" name="category_id" required>
                                            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
                                            <?php foreach ($categories as $category): ?>
                                                <option value="<?= $category['id'] ?>"><?= htmlspecialchars($category['name']) ?></option>
                                            <?php endforeach; ?>
                                        </select>
                                        <label for="category_id"><i class="fas fa-folder me-2"></i>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
                                    </div>
                                </div>

                                <div class="col-12">
                                    <div class="form-floating advanced-field">
                                        <textarea class="form-control" id="description" name="description" placeholder="–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞" style="height: 200px" required></textarea>
                                        <label for="description"><i class="fas fa-align-left me-2"></i>–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</label>
                                        <i class="fas fa-wand-magic-sparkles field-icon" title="–£–ª—É—á—à–∏—Ç—å —Å –ò–ò" onclick="generateDescription()"></i>
                                        <div class="character-counter"><span id="descCount">0</span>/2000 —Å–∏–º–≤–æ–ª–æ–≤</div>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-floating advanced-field">
                                        <textarea class="form-control" id="short_description" name="short_description" placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ" style="height: 80px"></textarea>
                                        <label for="short_description"><i class="fas fa-align-center me-2"></i>–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</label>
                                        <div class="character-counter"><span id="shortDescCount">0</span>/160 —Å–∏–º–≤–æ–ª–æ–≤</div>
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-floating advanced-field">
                                        <input type="number" class="form-control" id="price" name="price" placeholder="–¶–µ–Ω–∞" min="0" step="0.01" required>
                                        <label for="price"><i class="fas fa-ruble-sign me-2"></i>–¶–µ–Ω–∞ (‚ÇΩ)</label>
                                        <i class="fas fa-wand-magic-sparkles field-icon" title="–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ü–µ–Ω—É" onclick="suggestPrice()"></i>
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-floating">
                                        <input type="number" class="form-control" id="old_price" name="old_price" placeholder="–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞" min="0" step="0.01">
                                        <label for="old_price"><i class="fas fa-percentage me-2"></i>–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞ (‚ÇΩ)</label>
                                    </div>
                                </div>
                            </div>

                            <!-- –ü—Ä–æ—Å—Ç–∞—è –≥–∞–ª–µ—Ä–µ—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π -->
                            <div class="image-gallery-section animate__animated animate__fadeInUp">
                                <h3><i class="fas fa-images me-2"></i>–ì–∞–ª–µ—Ä–µ—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</h3>
                                <p>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞. –ü–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–º.</p>

                                <div class="simple-upload" onclick="document.getElementById('imageInput').click()">
                                    <input type="file" id="imageInput" accept="image/*" multiple>
                                    <div class="upload-text">
                                        <i class="fas fa-cloud-upload-alt fa-3x mb-3"></i>
                                        <div>–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</div>
                                        <div class="upload-note">
                                            –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è: JPG, PNG, GIF (–º–∞–∫—Å–∏–º—É–º 5 –ú–ë –Ω–∞ —Ñ–∞–π–ª)
                                        </div>
                                    </div>
                                </div>

                                <div class="image-preview-grid" id="imagePreviewGrid">
                                    <!-- –ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è -->
                                </div>

                                <!-- –°–∫—Ä—ã—Ç—ã–µ –ø–æ–ª—è –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π -->
                                <input type="hidden" id="main_image" name="main_image">
                                <input type="hidden" id="gallery_images" name="gallery_images">
                            </div>

                            <!-- SEO –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è -->
                            <div class="seo-optimization-section animate__animated animate__fadeInRight">
                                <h3><i class="fas fa-search me-2"></i>SEO –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è</h3>

                                <div class="seo-score" id="seoScore">
                                    <i class="fas fa-chart-line me-2"></i>SEO –†–µ–π—Ç–∏–Ω–≥: <span id="seoScoreValue">0</span>/100
                                </div>

                                <div class="row g-3">
                                    <div class="col-12">
                                        <div class="form-floating advanced-field">
                                            <input type="text" class="form-control" id="meta_title" name="meta_title" placeholder="Meta Title">
                                            <label for="meta_title"><i class="fas fa-heading me-2"></i>Meta Title</label>
                                            <i class="fas fa-wand-magic-sparkles field-icon" title="–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å SEO" onclick="optimizeSEO()"></i>
                                            <div class="character-counter"><span id="metaTitleCount">0</span>/60 —Å–∏–º–≤–æ–ª–æ–≤</div>
                                        </div>
                                    </div>

                                    <div class="col-12">
                                        <div class="form-floating advanced-field">
                                            <textarea class="form-control" id="meta_description" name="meta_description" placeholder="Meta Description" style="height: 80px"></textarea>
                                            <label for="meta_description"><i class="fas fa-info-circle me-2"></i>Meta Description</label>
                                            <div class="character-counter"><span id="metaDescCount">0</span>/160 —Å–∏–º–≤–æ–ª–æ–≤</div>
                                        </div>
                                    </div>

                                    <div class="col-12">
                                        <div class="form-floating">
                                            <input type="text" class="form-control" id="tags" name="tags" placeholder="–¢–µ–≥–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é">
                                            <label for="tags"><i class="fas fa-tags me-2"></i>–¢–µ–≥–∏ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)</label>
                                        </div>
                                    </div>
                                </div>

                                <div class="seo-recommendations" id="seoRecommendations" style="display: none;">
                                    <h5><i class="fas fa-lightbulb me-2"></i>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ SEO:</h5>
                                    <div id="seoRecommendationsList"></div>
                                </div>
                            </div>
                        </div>

                        <!-- –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å -->
                        <div class="col-lg-4">
                            <!-- –ê–Ω–∞–ª–∏–∑ —Ç–æ–≤–∞—Ä–∞ -->
                            <div class="product-analysis animate__animated animate__fadeInRight">
                                <h3><i class="fas fa-analytics me-2"></i>–ê–Ω–∞–ª–∏–∑ —Ç–æ–≤–∞—Ä–∞</h3>

                                <div class="analysis-metric">
                                    <div class="analysis-score score-average" id="completenessScore">0%</div>
                                    <div>–ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å</div>
                                </div>

                                <div class="analysis-metric">
                                    <div class="analysis-score score-average" id="qualityScore">0</div>
                                    <div>–ö–∞—á–µ—Å—Ç–≤–æ</div>
                                </div>

                                <div class="analysis-metric">
                                    <div class="analysis-score score-average" id="marketScore">0%</div>
                                    <div>–†—ã–Ω–æ—á–Ω—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª</div>
                                </div>

                                <button type="button" class="btn btn-outline-primary w-100" onclick="analyzeProduct()">
                                    <i class="fas fa-search me-2"></i>–ü—Ä–æ–≤–µ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑
                                </button>

                                <div id="analysisRecommendations" style="display: none; margin-top: 15px;">
                                    <h5>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</h5>
                                    <div id="recommendationsList"></div>
                                </div>
                            </div>

                            <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã -->
                            <div class="card border-0 shadow-sm mb-4">
                                <div class="card-header bg-light">
                                    <h5 class="mb-0"><i class="fas fa-cogs me-2"></i>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã</h5>
                                </div>
                                <div class="card-body">
                                    <div class="form-check form-switch mb-3">
                                        <input class="form-check-input" type="checkbox" id="is_active" name="status" value="1" checked>
                                        <label class="form-check-label" for="is_active">
                                            <i class="fas fa-eye me-2"></i>–ê–∫—Ç–∏–≤–Ω—ã–π —Ç–æ–≤–∞—Ä
                                        </label>
                                    </div>

                                    <div class="form-check form-switch mb-3">
                                        <input class="form-check-input" type="checkbox" id="is_new" name="is_new" value="1">
                                        <label class="form-check-label" for="is_new">
                                            <i class="fas fa-star me-2"></i>–ù–æ–≤–∏–Ω–∫–∞
                                        </label>
                                    </div>

                                    <div class="form-check form-switch mb-3">
                                        <input class="form-check-input" type="checkbox" id="is_sale" name="is_sale" value="1">
                                        <label class="form-check-label" for="is_sale">
                                            <i class="fas fa-percent me-2"></i>–¢–æ–≤–∞—Ä —Å–æ —Å–∫–∏–¥–∫–æ–π
                                        </label>
                                    </div>

                                    <div class="form-floating mb-3">
                                        <input type="number" class="form-control" id="stock_quantity" name="stock_quantity" min="0" value="0">
                                        <label for="stock_quantity"><i class="fas fa-boxes me-2"></i>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ —Å–∫–ª–∞–¥–µ</label>
                                    </div>

                                    <div class="form-floating">
                                        <input type="text" class="form-control" id="sku" name="sku" placeholder="–ê—Ä—Ç–∏–∫—É–ª">
                                        <label for="sku"><i class="fas fa-barcode me-2"></i>–ê—Ä—Ç–∏–∫—É–ª (SKU)</label>
                                    </div>
                                </div>
                            </div>

                            <!-- –ò–ò –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
                            <div class="card border-0 shadow-sm">
                                <div class="card-header bg-light">
                                    <h5 class="mb-0"><i class="fas fa-brain me-2"></i>–ò–ò –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h5>
                                </div>
                                <div class="card-body">
                                    <div class="d-flex justify-content-between mb-2">
                                        <span>–í—Å–µ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–π:</span>
                                        <strong id="aiTotalGenerations">-</strong>
                                    </div>
                                    <div class="d-flex justify-content-between mb-2">
                                        <span>–£—Å–ø–µ—à–Ω—ã—Ö:</span>
                                        <strong id="aiSuccessfulGenerations">-</strong>
                                    </div>
                                    <div class="d-flex justify-content-between mb-2">
                                        <span>–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π:</span>
                                        <strong id="aiKnowledgeBase">-</strong>
                                    </div>
                                    <div class="d-flex justify-content-between mb-2">
                                        <span>–°—Ç–∞—Ç—É—Å:</span>
                                        <strong id="aiStatus">–ü—Ä–æ–≤–µ—Ä–∫–∞...</strong>
                                    </div>
                                    <button type="button" class="btn btn-outline-info btn-sm w-100" onclick="loadAIStats()">
                                        <i class="fas fa-refresh me-2"></i>–û–±–Ω–æ–≤–∏—Ç—å
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π -->
                    <div class="action-buttons">
                        <button type="button" class="btn-preview" onclick="previewProduct()">
                            <i class="fas fa-eye me-2"></i>–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä
                        </button>
                        <button type="submit" name="create_product" class="btn-create">
                            <i class="fas fa-plus-circle me-2"></i>–°–æ–∑–¥–∞—Ç—å —Ç–æ–≤–∞—Ä
                        </button>
                        <button type="button" class="btn btn-outline-secondary" onclick="clearForm()">
                            <i class="fas fa-eraser me-2"></i>–û—á–∏—Å—Ç–∏—Ç—å —Ñ–æ—Ä–º—É
                        </button>
                        <a href="index.php" class="btn btn-outline-primary">
                            <i class="fas fa-home me-2"></i>–ì–ª–∞–≤–Ω–∞—è –∞–¥–º–∏–Ω–∫–∏
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- –°—Ç–∞—Ç—É—Å –ò–ò -->
    <div class="ai-status offline" id="aiStatusIndicator">
        <i class="fas fa-robot me-2"></i>–ü—Ä–æ–≤–µ—Ä–∫–∞ –ò–ò...
    </div>

    <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ -->
    <div class="modal fade" id="previewModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title"><i class="fas fa-eye me-2"></i>–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="previewContent">
                    <!-- –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">–ó–∞–∫—Ä—ã—Ç—å</button>
                </div>
            </div>
        </div>
    </div>

    <!-- JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

    <script>
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Toastr
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };

        // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        let uploadedImages = [];
        let mainImageIndex = 0;
        let aiOnline = false;

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ò–ò
        function checkAIStatus() {
            console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ò–ò...');

            $.ajax({
                url: '../modules/ai_assistant/aqua_ai.php',
                method: 'POST',
                data: {ai_action: 'ping'},
                timeout: 5000,
                dataType: 'json'
            }).done(function(response) {
                console.log('–ò–ò –æ—Ç–≤–µ—Ç–∏–ª:', response);
                aiOnline = true;
                updateAIStatus('online', '–ò–ò –º–æ–¥—É–ª—å –ø–æ–¥–∫–ª—é—á–µ–Ω');
                document.getElementById('aiStatus').textContent = '–ü–æ–¥–∫–ª—é—á–µ–Ω';
            }).fail(function(xhr, status, error) {
                console.log('–ò–ò –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', status, error);
                aiOnline = false;
                updateAIStatus('offline', '–ò–ò –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
                document.getElementById('aiStatus').textContent = '–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω';
            });
        }

        function updateAIStatus(status, text) {
            const statusEl = document.getElementById('aiStatusIndicator');
            statusEl.className = `ai-status ${status}`;
            statusEl.innerHTML = `<i class="fas fa-robot me-2"></i>${text}`;
        }

        // –ü—Ä–æ—Å—Ç–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        document.getElementById('imageInput').addEventListener('change', function(e) {
            const files = e.target.files;

            for (let i = 0; i < files.length; i++) {
                const file = files[i];

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
                if (!file.type.startsWith('image/')) {
                    toastr.error(`–§–∞–π–ª ${file.name} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º`);
                    continue;
                }

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (5 –ú–ë)
                if (file.size > 5 * 1024 * 1024) {
                    toastr.error(`–§–∞–π–ª ${file.name} —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (–º–∞–∫—Å–∏–º—É–º 5 –ú–ë)`);
                    continue;
                }

                // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
                const reader = new FileReader();
                reader.onload = function(e) {
                    addImageToGallery(file.name, e.target.result);
                    toastr.success(`–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${file.name} –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –≥–∞–ª–µ—Ä–µ—é`);
                };
                reader.readAsDataURL(file);
            }

            // –û—á–∏—â–∞–µ–º input
            this.value = '';
        });

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –≥–∞–ª–µ—Ä–µ—é
        function addImageToGallery(filename, url) {
            const imageItem = document.createElement('div');
            imageItem.className = 'image-preview-item animate__animated animate__fadeInUp';
            imageItem.dataset.filename = filename;

            const isMain = uploadedImages.length === 0;
            const imageIndex = uploadedImages.length;

            imageItem.innerHTML = `
                <img src="${url}" alt="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞">
                <div class="image-controls">
                    <button type="button" class="image-control-btn" onclick="setMainImage(${imageIndex})" title="–°–¥–µ–ª–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–º">
                        <i class="fas fa-star"></i>
                    </button>
                    <button type="button" class="image-control-btn" onclick="removeImage(${imageIndex})" title="–£–¥–∞–ª–∏—Ç—å">
                        <i class="fas fa-trash"></i>
                    </button>
                </div>
                ${isMain ? '<div class="image-main-badge">–û—Å–Ω–æ–≤–Ω–æ–µ</div>' : ''}
            `;

            document.getElementById('imagePreviewGrid').appendChild(imageItem);
            uploadedImages.push({filename, url});

            if (isMain) {
                mainImageIndex = 0;
                updateImageInputs();
            }
        }

        // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        function setMainImage(index) {
            // –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—É—é –æ—Ç–º–µ—Ç–∫—É
            const oldMain = document.querySelector('.image-main-badge');
            if (oldMain) oldMain.remove();

            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –æ—Ç–º–µ—Ç–∫—É
            const imageItems = document.querySelectorAll('.image-preview-item');
            if (imageItems[index]) {
                const badge = document.createElement('div');
                badge.className = 'image-main-badge';
                badge.textContent = '–û—Å–Ω–æ–≤–Ω–æ–µ';
                imageItems[index].appendChild(badge);
            }

            mainImageIndex = index;
            updateImageInputs();
            toastr.success('–û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ');
        }

        // –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        function removeImage(index) {
            if (confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ?')) {
                const imageItems = document.querySelectorAll('.image-preview-item');
                if (imageItems[index]) {
                    imageItems[index].classList.add('animate__animated', 'animate__fadeOutUp');
                    setTimeout(() => {
                        imageItems[index].remove();
                    }, 300);
                }

                uploadedImages.splice(index, 1);

                // –ï—Å–ª–∏ —É–¥–∞–ª–∏–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –¥–µ–ª–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–º –ø–µ—Ä–≤–æ–µ
                if (index === mainImageIndex && uploadedImages.length > 0) {
                    setTimeout(() => setMainImage(0), 350);
                } else if (index < mainImageIndex) {
                    mainImageIndex--;
                }

                updateImageInputs();
                toastr.info('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ');

                // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å—ã –∫–Ω–æ–ø–æ–∫
                setTimeout(() => {
                    const newItems = document.querySelectorAll('.image-preview-item');
                    newItems.forEach((item, newIndex) => {
                        const setMainBtn = item.querySelector('.image-control-btn');
                        const removeBtn = item.querySelectorAll('.image-control-btn')[1];

                        setMainBtn.onclick = () => setMainImage(newIndex);
                        removeBtn.onclick = () => removeImage(newIndex);
                    });
                }, 350);
            }
        }

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç—ã—Ö –ø–æ–ª–µ–π —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
        function updateImageInputs() {
            const mainImage = uploadedImages[mainImageIndex]?.url || '';
            const galleryImages = uploadedImages.map(img => img.url).join('|||'); // –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –¥–ª—è base64

            document.getElementById('main_image').value = mainImage;
            document.getElementById('gallery_images').value = galleryImages;
        }

        // –°—á–µ—Ç—á–∏–∫–∏ —Å–∏–º–≤–æ–ª–æ–≤
        function setupCharacterCounters() {
            const fields = [
                {id: 'name', counter: 'nameCount', max: 80},
                {id: 'description', counter: 'descCount', max: 2000},
                {id: 'short_description', counter: 'shortDescCount', max: 160},
                {id: 'meta_title', counter: 'metaTitleCount', max: 60},
                {id: 'meta_description', counter: 'metaDescCount', max: 160}
            ];

            fields.forEach(field => {
                const input = document.getElementById(field.id);
                const counter = document.getElementById(field.counter);

                if (input && counter) {
                    input.addEventListener('input', function() {
                        const length = this.value.length;
                        counter.textContent = length;
                        counter.style.color = length > field.max ? '#ff3838' : '#6c757d';
                    });
                }
            });
        }

        // –ò–ò —Ñ—É–Ω–∫—Ü–∏–∏
        function showAILoading(show = true) {
            const loading = document.getElementById('aiLoading');
            if (show) {
                loading.style.display = 'block';
                loading.classList.add('animate__animated', 'animate__fadeIn');
            } else {
                loading.style.display = 'none';
            }
        }

        function makeAIRequest(action, data = {}) {
            if (!aiOnline) {
                toastr.warning('–ò–ò –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –§—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –±–∞–∑–æ–≤–æ–º —Ä–µ–∂–∏–º–µ.');
                return $.Deferred().reject('AI offline');
            }

            showAILoading(true);

            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ
            data.ai_action = action;
            data.product_name = document.getElementById('name').value;
            data.category = document.getElementById('category_id').value;
            data.description = document.getElementById('description').value;

            console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ –ò–ò:', action, data);

            return $.ajax({
                url: '../modules/ai_assistant/aqua_ai.php',
                method: 'POST',
                data: data,
                dataType: 'json',
                timeout: 30000
            }).always(() => {
                showAILoading(false);
            }).fail(function(xhr, status, error) {
                console.log('–û—à–∏–±–∫–∞ –ò–ò:', status, error);
                if (status === 'timeout') {
                    toastr.error('–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò');
                } else {
                    toastr.error('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ò–ò –º–æ–¥—É–ª–µ–º');
                }
                aiOnline = false;
                updateAIStatus('offline', '–ò–ò –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
                document.getElementById('aiStatus').textContent = '–û—à–∏–±–∫–∞';
            });
        }

        // –ò–ò —Ñ—É–Ω–∫—Ü–∏–∏
        function generateAll() {
            const name = document.getElementById('name').value;
            const category = document.getElementById('category_id').value;

            if (!name) {
                toastr.error('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏');
                return;
            }

            if (!category) {
                toastr.error('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏');
                return;
            }

            makeAIRequest('generate_all').done(function(response) {
                console.log('–û—Ç–≤–µ—Ç –ò–ò –Ω–∞ generate_all:', response);
                if (response.success) {
                    // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª—è
                    if (response.name) document.getElementById('name').value = response.name;
                    if (response.description) document.getElementById('description').value = response.description;
                    if (response.short_description) document.getElementById('short_description').value = response.short_description;
                    if (response.price) document.getElementById('price').value = response.price;
                    if (response.old_price) document.getElementById('old_price').value = response.old_price;
                    if (response.tags) document.getElementById('tags').value = response.tags;
                    if (response.meta_title) document.getElementById('meta_title').value = response.meta_title;
                    if (response.meta_description) document.getElementById('meta_description').value = response.meta_description;

                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏
                    updateCharacterCounters();

                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                    toastr.success(response.message || '–ò–ò —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞!');

                    // –ü—Ä–æ–≤–æ–¥–∏–º –∞–Ω–∞–ª–∏–∑
                    setTimeout(analyzeProduct, 1000);
                } else {
                    toastr.error(response.message || '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö');
                }
            });
        }

        function generateName() {
            const category = document.getElementById('category_id').value;
            if (!category) {
                toastr.error('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è');
                return;
            }

            makeAIRequest('generate_name', {
                keywords: document.getElementById('name').value
            }).done(function(response) {
                if (response.success && response.name) {
                    document.getElementById('name').value = response.name;
                    document.getElementById('nameCount').textContent = response.name.length;
                    toastr.success('–ù–∞–∑–≤–∞–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –ò–ò!');
                } else {
                    toastr.error(response.message || '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è');
                }
            });
        }

        function generateDescription() {
            const name = document.getElementById('name').value;
            if (!name) {
                toastr.error('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è');
                return;
            }

            makeAIRequest('generate_description').done(function(response) {
                if (response.success) {
                    if (response.description) {
                        document.getElementById('description').value = response.description;
                        document.getElementById('descCount').textContent = response.description.length;
                    }
                    if (response.short_description) {
                        document.getElementById('short_description').value = response.short_description;
                        document.getElementById('shortDescCount').textContent = response.short_description.length;
                    }
                    toastr.success('–û–ø–∏—Å–∞–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –ò–ò!');
                } else {
                    toastr.error(response.message || '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è');
                }
            });
        }

        function suggestPrice() {
            const name = document.getElementById('name').value;
            if (!name) {
                toastr.error('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ü–µ–Ω—ã');
                return;
            }

            makeAIRequest('suggest_price').done(function(response) {
                if (response.success) {
                    if (response.price) {
                        document.getElementById('price').value = response.price;
                    }
                    if (response.old_price) {
                        document.getElementById('old_price').value = response.old_price;
                    }

                    let message = '–¶–µ–Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∞ –ò–ò!';
                    if (response.explanation) {
                        message += '\n' + response.explanation;
                    }

                    toastr.success(message);
                } else {
                    toastr.error(response.message || '–û—à–∏–±–∫–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ü–µ–Ω—ã');
                }
            });
        }

        function optimizeSEO() {
            const name = document.getElementById('name').value;

            if (!name) {
                toastr.error('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏');
                return;
            }

            makeAIRequest('optimize_seo').done(function(response) {
                if (response.success) {
                    if (response.meta_title) {
                        document.getElementById('meta_title').value = response.meta_title;
                        document.getElementById('metaTitleCount').textContent = response.meta_title.length;
                    }
                    if (response.meta_description) {
                        document.getElementById('meta_description').value = response.meta_description;
                        document.getElementById('metaDescCount').textContent = response.meta_description.length;
                    }
                    if (response.tags) {
                        document.getElementById('tags').value = response.tags;
                    }

                    // –û–±–Ω–æ–≤–ª—è–µ–º SEO —Ä–µ–π—Ç–∏–Ω–≥
                    if (response.seo_score) {
                        updateSEOScore(response.seo_score);
                    }

                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
                    if (response.recommendations && response.recommendations.length > 0) {
                        showSEORecommendations(response.recommendations);
                    }

                    toastr.success('SEO –¥–∞–Ω–Ω—ã–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –ò–ò!');
                } else {
                    toastr.error(response.message || '–û—à–∏–±–∫–∞ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏');
                }
            });
        }

        function analyzeProduct() {
            const formData = new FormData(document.getElementById('productForm'));
            const data = Object.fromEntries(formData);

            makeAIRequest('analyze_product', data).done(function(response) {
                if (response.success && response.analysis) {
                    const analysis = response.analysis;

                    // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç—Ä–∏–∫–∏
                    updateAnalysisScore('completenessScore', analysis.completeness || 0, '%');
                    updateAnalysisScore('qualityScore', analysis.quality_score || 0, '');
                    updateAnalysisScore('marketScore', analysis.market_potential || 0, '%');

                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
                    if (analysis.recommendations && analysis.recommendations.length > 0) {
                        showAnalysisRecommendations(analysis.recommendations);
                    }

                    toastr.success('–ê–Ω–∞–ª–∏–∑ —Ç–æ–≤–∞—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω!');
                } else {
                    toastr.error(response.message || '–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ç–æ–≤–∞—Ä–∞');
                }
            });
        }

        // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        function updateSEOScore(score) {
            const scoreElement = document.getElementById('seoScoreValue');
            scoreElement.textContent = score;

            const scoreContainer = document.getElementById('seoScore');
            scoreContainer.classList.remove('score-excellent', 'score-good', 'score-average', 'score-poor');

            if (score >= 80) {
                scoreContainer.classList.add('score-excellent');
            } else if (score >= 60) {
                scoreContainer.classList.add('score-good');
            } else if (score >= 40) {
                scoreContainer.classList.add('score-average');
            } else {
                scoreContainer.classList.add('score-poor');
            }
        }

        function showSEORecommendations(recommendations) {
            const container = document.getElementById('seoRecommendations');
            const list = document.getElementById('seoRecommendationsList');

            list.innerHTML = '';
            recommendations.forEach(rec => {
                const item = document.createElement('div');
                item.className = 'seo-recommendation';
                item.innerHTML = `<i class="fas fa-lightbulb"></i>${rec}`;
                list.appendChild(item);
            });

            container.style.display = 'block';
            container.classList.add('animate__animated', 'animate__fadeInUp');
        }

        function updateAnalysisScore(elementId, value, suffix) {
            const element = document.getElementById(elementId);
            element.textContent = value + suffix;

            // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–≤–µ—Ç
            element.classList.remove('score-excellent', 'score-good', 'score-average', 'score-poor');

            const numValue = parseInt(value);
            if (numValue >= 80) {
                element.classList.add('score-excellent');
            } else if (numValue >= 60) {
                element.classList.add('score-good');
            } else if (numValue >= 40) {
                element.classList.add('score-average');
            } else {
                element.classList.add('score-poor');
            }

            // –ê–Ω–∏–º–∞—Ü–∏—è
            element.classList.add('animate__animated', 'animate__pulse');
            setTimeout(() => {
                element.classList.remove('animate__animated', 'animate__pulse');
            }, 1000);
        }

        function showAnalysisRecommendations(recommendations) {
            const container = document.getElementById('analysisRecommendations');
            const list = document.getElementById('recommendationsList');

            list.innerHTML = '';
            recommendations.forEach(rec => {
                const item = document.createElement('div');
                item.className = 'alert alert-info alert-sm mb-2';
                item.innerHTML = `<i class="fas fa-info-circle me-2"></i>${rec}`;
                list.appendChild(item);
            });

            container.style.display = 'block';
            container.classList.add('animate__animated', 'animate__fadeInUp');
        }

        function loadAIStats() {
            console.log('–ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ò–ò...');

            $.ajax({
                url: '../modules/ai_assistant/aqua_ai.php',
                method: 'POST',
                data: {ai_action: 'get_stats'},
                dataType: 'json',
                timeout: 10000
            }).done(function(response) {
                console.log('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ò–ò:', response);

                // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç success —Ñ–ª–∞–≥–∞
                document.getElementById('aiTotalGenerations').textContent = response.total_generations || 0;
                document.getElementById('aiSuccessfulGenerations').textContent = response.successful_generations || 0;
                document.getElementById('aiKnowledgeBase').textContent = response.knowledge_base_size || 0;

                if (response.success || response.total_generations !== undefined) {
                    toastr.success('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ò–ò –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
                } else {
                    toastr.warning('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞ —á–∞—Å—Ç–∏—á–Ω–æ: ' + (response.message || ''));
                }
            }).fail(function(xhr, status, error) {
                console.log('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', status, error);
                document.getElementById('aiTotalGenerations').textContent = '–û—à–∏–±–∫–∞';
                document.getElementById('aiSuccessfulGenerations').textContent = '–û—à–∏–±–∫–∞';
                document.getElementById('aiKnowledgeBase').textContent = '–û—à–∏–±–∫–∞';
                toastr.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ò–ò');
            });
        }

        // –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä
        function previewProduct() {
            const formData = new FormData(document.getElementById('productForm'));
            const data = Object.fromEntries(formData);

            let previewHTML = `
                <div class="row">
                    <div class="col-md-6">
                        <h3>${data.name || '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞'}</h3>
                        <p class="text-muted">${data.short_description || '–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}</p>
                        <div class="mb-3">
                            ${data.old_price ? `<span class="text-muted text-decoration-line-through me-2">${data.old_price} ‚ÇΩ</span>` : ''}
                            <span class="h4 text-success">${data.price || '0'} ‚ÇΩ</span>
                        </div>
                        <div class="mb-3">
                            <small class="text-muted">–ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${$('#category_id option:selected').text() || '–ù–µ –≤—ã–±—Ä–∞–Ω–∞'}</small>
                        </div>
                    </div>
                    <div class="col-md-6">
                        ${uploadedImages.length > 0 ? 
                            `<img src="${uploadedImages[mainImageIndex].url}" class="img-fluid rounded" alt="–û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ">` :
                            '<div class="bg-light p-5 text-center rounded"><i class="fas fa-image fa-3x text-muted"></i><br>–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</div>'
                        }
                    </div>
                </div>
                <hr>
                <div class="mb-3">
                    <h5>–û–ø–∏—Å–∞–Ω–∏–µ:</h5>
                    <div style="white-space: pre-wrap;">${data.description || '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}</div>
                </div>
                ${data.tags ? `
                <div class="mb-3">
                    <h6>–¢–µ–≥–∏:</h6>
                    ${data.tags.split(',').map(tag => `<span class="badge bg-secondary me-1">${tag.trim()}</span>`).join('')}
                </div>` : ''}
                ${uploadedImages.length > 1 ? `
                <div class="mb-3">
                    <h6>–ì–∞–ª–µ—Ä–µ—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:</h6>
                    <div class="row g-2">
                        ${uploadedImages.map((img, index) => `
                            <div class="col-3">
                                <img src="${img.url}" class="img-fluid rounded" alt="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${index + 1}">
                            </div>
                        `).join('')}
                    </div>
                </div>` : ''}
            `;

            document.getElementById('previewContent').innerHTML = previewHTML;
            new bootstrap.Modal(document.getElementById('previewModal')).show();
        }

        // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã
        function clearForm() {
            if (confirm('–û—á–∏—Å—Ç–∏—Ç—å –≤—Å—é —Ñ–æ—Ä–º—É? –í—Å–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã.')) {
                document.getElementById('productForm').reset();

                // –û—á–∏—â–∞–µ–º –≥–∞–ª–µ—Ä–µ—é
                document.getElementById('imagePreviewGrid').innerHTML = '';
                uploadedImages = [];
                mainImageIndex = 0;
                updateImageInputs();

                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏
                document.querySelectorAll('.character-counter span').forEach(counter => {
                    counter.textContent = '0';
                });

                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–Ω–∞–ª–∏–∑
                updateAnalysisScore('completenessScore', 0, '%');
                updateAnalysisScore('qualityScore', 0, '');
                updateAnalysisScore('marketScore', 0, '%');
                updateSEOScore(0);

                document.getElementById('analysisRecommendations').style.display = 'none';
                document.getElementById('seoRecommendations').style.display = 'none';

                toastr.info('–§–æ—Ä–º–∞ –æ—á–∏—â–µ–Ω–∞');
            }
        }

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–æ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
        function updateCharacterCounters() {
            const fields = ['name', 'description', 'short_description', 'meta_title', 'meta_description'];
            fields.forEach(field => {
                const input = document.getElementById(field);
                if (input) {
                    const event = new Event('input', { bubbles: true });
                    input.dispatchEvent(event);
                }
            });
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        $(document).ready(function() {
            console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤...');

            setupCharacterCounters();
            checkAIStatus();
            loadAIStats();

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ò–ò –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
            setInterval(checkAIStatus, 30000);

            // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã –Ω–∞–≤–µ–¥–µ–Ω–∏—è –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ò–ò
            $('.ai-btn').hover(
                function() {
                    $(this).addClass('pulse');
                },
                function() {
                    $(this).removeClass('pulse');
                }
            );

            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª–µ–π
            let analysisTimeout;
            $('#productForm input, #productForm textarea, #productForm select').on('input change', function() {
                clearTimeout(analysisTimeout);
                analysisTimeout = setTimeout(function() {
                    // –ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏
                    const formData = new FormData(document.getElementById('productForm'));
                    const data = Object.fromEntries(formData);

                    let completeness = 0;
                    const requiredFields = ['name', 'description', 'price', 'category_id'];
                    const filledRequired = requiredFields.filter(field => data[field] && data[field].trim()).length;

                    const optionalFields = ['short_description', 'tags', 'meta_title', 'meta_description'];
                    const filledOptional = optionalFields.filter(field => data[field] && data[field].trim()).length;

                    completeness = (filledRequired / requiredFields.length * 70) + (filledOptional / optionalFields.length * 30);
                    updateAnalysisScore('completenessScore', Math.round(completeness), '%');

                    // –û–±–Ω–æ–≤–ª—è–µ–º SEO —Ä–µ–π—Ç–∏–Ω–≥
                    let seoScore = 0;
                    if (data.meta_title && data.meta_title.length <= 60) seoScore += 30;
                    if (data.meta_description && data.meta_description.length <= 160) seoScore += 30;
                    if (data.tags) seoScore += 40;
                    updateSEOScore(seoScore);

                }, 500);
            });

            console.log('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
        });
    </script>
</body>
</html>
